<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="M_CB_1000" width="1542" height="695" titletext="예산편성지침" onload="fn_FormOnload" onclose="fn_FormClose">
    <Layouts>
      <Layout height="695" width="1542">
        <Div id="div_Search" taborder="0" left="14" top="12" height="66" cssclass="div_WF_Search" formscrollbartype="none none" right="14" text="">
          <Layouts>
            <Layout>
              <Static id="sta_ClosDd" taborder="0" text="편성년도" left="16" top="6" width="80" height="24" cssclass="sta_WF_SLabel" DomainID="S00002"/>
              <Static id="Static01" taborder="1" text="예산구분" left="376" top="6" width="80" height="24" cssclass="sta_WF_SLabel"/>
              <Static id="Static02" taborder="2" text="계정명" left="736" top="6" width="80" height="24" cssclass="sta_WF_SLabel"/>
              <Edit id="edt_AcomNm" taborder="3" left="816" top="6" width="248" height="24" enable="true" onchanged="div_Search_edt_CusmNm_onchanged" maxlength="30"/>
              <Edit id="edt_ClosDd" taborder="4" left="96" top="6" width="113" height="24" tabstop="true" inputtype="digit" maxlength="4" cssclass="essential"/>
              <Combo id="edt_BudgGu" taborder="5" left="456" top="6" height="24" codecolumn="CODM_CD" datacolumn="CODM_NM" width="248" innerdataset="ds_Fa048Sch"/>
              <Static id="sta_CopyYy" taborder="6" text="복사년도(TO)" left="1096" top="6" width="80" height="24" cssclass="sta_WF_SLabel"/>
              <Edit id="edt_CopyYy" taborder="7" left="1177" top="6" width="90" height="24" onchanged="div_Search_edt_ItemCd_onchanged" maxlength="4"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="div_MasterView" taborder="1" left="14" top="90" bottom="5" width="1040" text="">
          <Layouts>
            <Layout>
              <Static id="sta_Master10" taborder="0" text="예산편성계정" left="0" top="0" width="220" height="32" cssclass="sta_WF_Title"/>
              <Button id="btn_DivMoveMv" taborder="2" width="12" cssclass="bt_WF_FoldA_R" right="0" height="35" onclick="div_MasterView_btn_DivMoveMv_onclick" text="" top="133" cursor="pointer"/>
              <Grid id="grd_Master10" taborder="1" left="0" top="32" right="10" bottom="0" selecttype="cell" treeinitstatus="collapse,null" treeuseexpandkey="true" binddataset="ds_Master10" cellsizingtype="col" autofittype="col">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="35"/>
                      <Column size="40"/>
                      <Column size="100"/>
                      <Column size="220"/>
                      <Column size="80"/>
                      <Column size="80"/>
                      <Column size="80"/>
                      <Column size="363"/>
                    </Columns>
                    <Rows>
                      <Row size="24" band="head"/>
                      <Row size="24"/>
                    </Rows>
                    <Band id="head">
                      <Cell text="No."/>
                      <Cell col="1" text="선택"/>
                      <Cell col="2" text="계정코드"/>
                      <Cell col="3" text="계정명"/>
                      <Cell col="4" text="예산구분"/>
                      <Cell col="5" text="통제여부" cssclass="grdInput"/>
                      <Cell col="6" text="통제기간"/>
                      <Cell col="7" text="편성지침" cssclass="grdInput"/>
                    </Band>
                    <Band id="body">
                      <Cell textAlign="center" expr="currow+1"/>
                      <Cell col="1" text="bind:s_chk" displaytype="checkboxcontrol" edittype="checkbox"/>
                      <Cell col="2" text="bind:ACOM_CD" textAlign="center" editmaxlength="30"/>
                      <Cell col="3" text="bind:ACOM_NM" editmaxlength="100"/>
                      <Cell col="4" text="bind:BUDG_GU" edittype="combo" displaytype="combotext" combodataset="ds_Fa048" combocodecol="CODM_CD" combodatacol="CODM_NM"/>
                      <Cell col="5" text="bind:BGCM_YN" displaytype="checkboxcontrol" edittype="checkbox"/>
                      <Cell col="6" text="bind:BGCM_CD" edittype="readonly" displaytype="combotext" combodataset="ds_Cb102" combocodecol="CODM_CD" combodatacol="CODM_NM"/>
                      <Cell col="7" text="bind:REMK_NM" edittype="text" editmaxlength="1000"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </Div>
        <Div id="div_MasterInput" taborder="2" left="1050" top="90" text="" enable="true" right="14" bottom="5">
          <Layouts>
            <Layout>
              <Tab id="tab_Master" taborder="0" tabindex="0" left="40" top="0" right="0" cssclass="tab_WF_MasterList" bottom="0">
                <Tabpages>
                  <Tabpage id="tpg_01" text="예산미편성계정" enable="true">
                    <Layouts>
                      <Layout>
                        <Grid id="grd_Detail10" taborder="0" left="0" top="1" autofittype="col" right="0" bottom="0" selecttype="cell" cellsizingtype="col" binddataset="ds_Detail10" autoenter="none" treeuseexpandkey="false">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="35"/>
                                <Column size="40"/>
                                <Column size="100"/>
                                <Column size="220"/>
                                <Column size="60"/>
                              </Columns>
                              <Rows>
                                <Row size="24" band="head"/>
                                <Row size="24"/>
                              </Rows>
                              <Band id="head">
                                <Cell text="No."/>
                                <Cell col="1" text="선택"/>
                                <Cell col="2" text="계정코드"/>
                                <Cell col="3" text="계정명"/>
                                <Cell col="4" text="예산구분"/>
                              </Band>
                              <Band id="body">
                                <Cell expr="currow+1" textAlign="center"/>
                                <Cell col="1" displaytype="checkboxcontrol" edittype="checkbox" text="bind:s_chk" textAlign="center"/>
                                <Cell col="2" text="bind:ACOM_CD" textAlign="center" editmaxlength="30"/>
                                <Cell col="3" text="bind:ACOM_NM" editmaxlength="100"/>
                                <Cell col="4" text="bind:BUDG_GU" displaytype="combotext" edittype="readonly" combodataset="ds_Fa048" combocodecol="CODM_CD" combodatacol="CODM_NM"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                </Tabpages>
              </Tab>
              <Button id="btn_Add" taborder="1" text="▶" left="4" top="283" width="24" height="34" cssclass="bt_WF_InputArea_White" cursor="pointer" onclick="btn_Add_onclick"/>
              <Button id="btn_Add00" taborder="2" text="◀" left="4" top="220" width="24" height="34" cssclass="bt_WF_InputArea_White" cursor="pointer" onclick="btn_Add00_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btn_DivMoveMi" taborder="3" top="78" height="10" width="40" visible="true" onclick="btn_DivMoveMi_onclick" cssclass="bt_TF_FoldA" left="700" cursor="pointer" text=""/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_Input">
        <ColumnInfo>
          <Column id="BGCM_YY" type="STRING" size="256"/>
          <Column id="ACOM_NM" type="STRING" size="256"/>
          <Column id="BUDG_GU" type="STRING" size="256"/>
          <Column id="COPY_YY" type="STRING" size="256"/>
          <Column id="DELE_GU" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Master10" oncolumnchanged="ds_Master10_oncolumnchanged">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="BGCM_YY" type="STRING" size="256"/>
          <Column id="ACOM_CD" type="STRING" size="256"/>
          <Column id="BGCM_YN" type="STRING" size="256"/>
          <Column id="BGCM_CD" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
          <Column id="REGI_ID" type="STRING" size="256"/>
          <Column id="REGI_NM" type="STRING" size="256"/>
          <Column id="REGI_DT" type="STRING" size="256"/>
          <Column id="MODI_ID" type="STRING" size="256"/>
          <Column id="MODI_NM" type="STRING" size="256"/>
          <Column id="MODI_DT" type="STRING" size="256"/>
          <Column id="ACOM_NM" type="STRING" size="256"/>
          <Column id="BUDG_GU" type="STRING" size="256"/>
          <Column id="s_chk" type="STRING" size="256"/>
          <Column id="crudType" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Detail10">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="ACOM_CD" type="STRING" size="256"/>
          <Column id="ACOM_NM" type="STRING" size="256"/>
          <Column id="ACOA_NM" type="STRING" size="256"/>
          <Column id="ACOE_NM" type="STRING" size="256"/>
          <Column id="ACOP_CD" type="STRING" size="256"/>
          <Column id="ACOM_GU" type="STRING" size="256"/>
          <Column id="BUDG_GU" type="STRING" size="256"/>
          <Column id="ACOM_LV" type="STRING" size="256"/>
          <Column id="INPU_YN" type="STRING" size="256"/>
          <Column id="DECR_GU" type="STRING" size="256"/>
          <Column id="CRED_YN" type="STRING" size="256"/>
          <Column id="FIVA_YN" type="STRING" size="256"/>
          <Column id="SALE_YN" type="STRING" size="256"/>
          <Column id="CTRL_CD" type="STRING" size="256"/>
          <Column id="COST_CD" type="STRING" size="256"/>
          <Column id="AGIN_YN" type="STRING" size="256"/>
          <Column id="AGST_NO" type="STRING" size="256"/>
          <Column id="ACNM_YN" type="STRING" size="256"/>
          <Column id="FUND_YN" type="STRING" size="256"/>
          <Column id="FORE_YN" type="STRING" size="256"/>
          <Column id="ASSY_YN" type="STRING" size="256"/>
          <Column id="DEPR_YN" type="STRING" size="256"/>
          <Column id="BUDG_YN" type="STRING" size="256"/>
          <Column id="ANTI_YN" type="STRING" size="256"/>
          <Column id="ADVA_YN" type="STRING" size="256"/>
          <Column id="FORE_CD" type="STRING" size="256"/>
          <Column id="MA01_CD" type="STRING" size="256"/>
          <Column id="MA01_YN" type="STRING" size="256"/>
          <Column id="MA02_CD" type="STRING" size="256"/>
          <Column id="MA02_YN" type="STRING" size="256"/>
          <Column id="MA03_CD" type="STRING" size="256"/>
          <Column id="MA03_YN" type="STRING" size="256"/>
          <Column id="MA04_CD" type="STRING" size="256"/>
          <Column id="MA04_YN" type="STRING" size="256"/>
          <Column id="MA05_CD" type="STRING" size="256"/>
          <Column id="MA05_YN" type="STRING" size="256"/>
          <Column id="MA06_CD" type="STRING" size="256"/>
          <Column id="MA06_YN" type="STRING" size="256"/>
          <Column id="MA07_CD" type="STRING" size="256"/>
          <Column id="MA07_YN" type="STRING" size="256"/>
          <Column id="MA08_CD" type="STRING" size="256"/>
          <Column id="MA08_YN" type="STRING" size="256"/>
          <Column id="REPR_YN" type="STRING" size="256"/>
          <Column id="REPR_CD" type="STRING" size="256"/>
          <Column id="SORT_NO" type="STRING" size="256"/>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
          <Column id="REGI_ID" type="STRING" size="256"/>
          <Column id="REGI_NM" type="STRING" size="256"/>
          <Column id="REGI_DT" type="STRING" size="256"/>
          <Column id="MODI_ID" type="STRING" size="256"/>
          <Column id="MODI_NM" type="STRING" size="256"/>
          <Column id="MODI_DT" type="STRING" size="256"/>
          <Column id="DELE_ID" type="STRING" size="256"/>
          <Column id="DELE_NM" type="STRING" size="256"/>
          <Column id="DELE_DT" type="STRING" size="256"/>
          <Column id="s_chk" type="STRING" size="256"/>
          <Column id="Column0" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Master11">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="BGCM_YY" type="STRING" size="256"/>
          <Column id="crudType" type="STRING" size="256"/>
          <Column id="COUNT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Count">
        <ColumnInfo>
          <Column id="CNT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Fa048">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="GRCM_CD" type="STRING" size="256"/>
          <Column id="CODM_CD" type="STRING" size="256"/>
          <Column id="CODM_NM" type="STRING" size="256"/>
          <Column id="OP01_NM" type="STRING" size="256"/>
          <Column id="OP02_NM" type="STRING" size="256"/>
          <Column id="OP03_NM" type="STRING" size="256"/>
          <Column id="OP04_NM" type="STRING" size="256"/>
          <Column id="OP05_NM" type="STRING" size="256"/>
          <Column id="OP06_NM" type="STRING" size="256"/>
          <Column id="OP07_NM" type="STRING" size="256"/>
          <Column id="OP08_NM" type="STRING" size="256"/>
          <Column id="OP09_NM" type="STRING" size="256"/>
          <Column id="OP10_NM" type="STRING" size="256"/>
          <Column id="SORT_NO" type="STRING" size="256"/>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
          <Column id="EXPT_YN" type="STRING" size="256"/>
          <Column id="EXPT_RE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Fa048Sch">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="GRCM_CD" type="STRING" size="256"/>
          <Column id="CODM_CD" type="STRING" size="256"/>
          <Column id="CODM_NM" type="STRING" size="256"/>
          <Column id="OP01_NM" type="STRING" size="256"/>
          <Column id="OP02_NM" type="STRING" size="256"/>
          <Column id="OP03_NM" type="STRING" size="256"/>
          <Column id="OP04_NM" type="STRING" size="256"/>
          <Column id="OP05_NM" type="STRING" size="256"/>
          <Column id="OP06_NM" type="STRING" size="256"/>
          <Column id="OP07_NM" type="STRING" size="256"/>
          <Column id="OP08_NM" type="STRING" size="256"/>
          <Column id="OP09_NM" type="STRING" size="256"/>
          <Column id="OP10_NM" type="STRING" size="256"/>
          <Column id="SORT_NO" type="STRING" size="256"/>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
          <Column id="EXPT_YN" type="STRING" size="256"/>
          <Column id="EXPT_RE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Cb102">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="GRCM_CD" type="STRING" size="256"/>
          <Column id="CODM_CD" type="STRING" size="256"/>
          <Column id="CODM_NM" type="STRING" size="256"/>
          <Column id="OP01_NM" type="STRING" size="256"/>
          <Column id="OP02_NM" type="STRING" size="256"/>
          <Column id="OP03_NM" type="STRING" size="256"/>
          <Column id="OP04_NM" type="STRING" size="256"/>
          <Column id="OP05_NM" type="STRING" size="256"/>
          <Column id="OP06_NM" type="STRING" size="256"/>
          <Column id="OP07_NM" type="STRING" size="256"/>
          <Column id="OP08_NM" type="STRING" size="256"/>
          <Column id="OP09_NM" type="STRING" size="256"/>
          <Column id="OP10_NM" type="STRING" size="256"/>
          <Column id="SORT_NO" type="STRING" size="256"/>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
          <Column id="EXPT_YN" type="STRING" size="256"/>
          <Column id="EXPT_RE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  @화면ID   : M_CB_1000
*  @화면설명 : 예산편셩지침
*  @시스템명 : (CB) 관리회계
*  @작성자   : 박지용
*  @작성일   : 2021.07.06
*  @Desction    
******************* 소스 수정 이력 ************************************************************
*  일자          		수정자                비고
*************************************************************************************************
*  2021.07.06     	    박지용 	           최초 생성 
*************************************************************************************************
*/

/***********************************************************************************************
 * 0. 폼로드
 ***********************************************************************************************/
/***********************************************************************************************
 * 00.01. Form Include 선언
 ***********************************************************************************************/
//include "comLib::CommonUtil.xjs";//공통함수

/***********************************************************************************************
 * 00.02. Form 변수 선언
 ***********************************************************************************************/
this.fvComPrgmId = "";//[필수]프로그램ID-메인화면기준, 팝업일경우 해당 메인화면의 프로그램ID
this.fvFormComBtnAuthYn = false;//그리드 공통버튼 권한 유무
this.fvPathNm = "CA";//[첨부파일]업무파일경로
this.fvDsRowPosChange = true;//데이터셋 Row 변경이벤트-실행유무
this.fvSchKeyYn = false;//저장후 재조회여부
this.fvSchKey01 = "";//조회Key01
this.fvSchKey02 = "";//조회Key02
this.fvSchKey03 = "";//조회Key03

var fvFileInfo = new Object();//[첨부파일]정보

/***********************************************************************************************
 * 00.03. Form Onload 이벤트
 ***********************************************************************************************/
this.fn_FormOnload = function (obj:Form, e:LoadEventInfo)
{
	this.fn_FormComInit();//[공통] 화면로드시 초기 설정 함수
	this.fn_FormBizInit();//[업무] 화면로드시 초기 설정 함수 

}

/***********************************************************************************************
 * 00.04. Form [공통] 초기설정 함수 - 필수
 ***********************************************************************************************/
this.fn_FormComInit = function() 
{
	this.gfn_CommFormOnLoad(this);//[공통] 화면로드시 처리 함수(다국어등)
	this.fvComPrgmId = this.gfn_CommLoadFormPrgmId(this);//[필수]프로그램ID-메인화면기준, 팝업일경우 해당 메인화면의 프로그램ID

	this.gfn_SetGrid(this.div_MasterView.form.grd_Master10);//[공통]그리드 이벤트 설정 - 예산편성계정	                 
	this.gfn_SetGrid(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Detail10);//[공통]그리드 이벤트 설정 - 예산미편성계정
	
	//권한체크 할 컴포넌트 : 컴포넌트 Full Path
	
// 	this.fn_SetGridInputButton();//[공통] 그리드 입력 버튼 설정
// 	this.fn_SetTabComAttachFile();//[공통] 첨부파일 Tab 설정
}

/***********************************************************************************************
 * 00.05. Form [업무] 초기설정 함수
 ***********************************************************************************************/
this.fn_FormBizInit = function() 
{ 
	//[공통] 날짜정보 설정	
	//금년
	var sNowYear = this.gfn_GetCommDate("nowYear");//금년	
	this.div_Search.form.edt_ClosDd.set_value(sNowYear);
	
	//[공통] 부서정보 설정	
	//[공통] 사원정보 설정

	//[공통] 공통코드 설정 : 공통코드|데이터셋명|초기항목추가여부(Y/N)|추가항목
	var objCondList = ["FA048|ds_Fa048", "FA048|ds_Fa048Sch|Y|ALL", "CB102|ds_Cb102"];
	//공통코드 설정함수 호출				   
	this.gfn_GetCommCode(this, objCondList, "");


	//체크 콤보 설정값 만들기
	//체크 콤보 초기화 함수 호출	
	//체크 콤보의 Code 값을 입력하는 함수 실행
	
 	//[업무] 일반콤보조회
	
	//grd_Detail10 - 예산미편성계정 조회
	this.fn_AcomSearch();	
}

/***********************************************************************************************
 * 00.05.01 Form [업무] grd_Detail10 - 예산미편성계정 조회
 ***********************************************************************************************/
this.fn_AcomSearch = function() 
{	
	this.ds_Input.clearData();
	this.ds_Input.addRow();
	
	this.ds_Detail10.clearData();
	
	//[공통]서비스정보 초기화
	this.gfn_InitComService(this);	
	
	//[공통]서비스정보 추가
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "ca:M_CB_1000_D_SL10";
	this.gfn_AddComSearchService(this, svcAddObj);	
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid = "DTL_SEARCH";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_CA;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = "ds_Input=ds_Input" //입력 데이터셋
	svcCallObj.sOutDatset = "ds_Detail10=ds_Detail10";//출력 데이터셋
	svcCallObj.sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명
	svcCallObj.isSync = true;//동기식으로 설정할지 여부
	
	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);	
	
	//grd_Detail10 - No Data 표시	
	if (this.ds_Detail10.getRowCount() > 0) {
		//[공통]그리드NoData Text 초기화 설정
		this.gfn_InitGridNoDataText(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Detail10);
	} else {
		//[공통]그리드NoData Text설정
		this.gfn_SetGridNoDataText(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Detail10);			
	}
}

/***********************************************************************************************
 * 00.06. Form [업무] 일반콤보 조회 함수
 ***********************************************************************************************/
/***********************************************************************************************
 * 00.07. Form OnClose 이벤트
 ***********************************************************************************************/
this.fn_FormClose = function(obj:nexacro.Form,e:nexacro.CloseEventInfo)
{
	return true;
};

/***********************************************************************************************
 * 1. 조회 영역
 ***********************************************************************************************/
/***********************************************************************************************
 * 01.01. [공통버튼] 조회 버튼 클릭 이벤트
 ***********************************************************************************************/
this.fn_ComBtnSearch = function()
{ 
	//조회전 유효성 체크
	if (!this.fn_VaildSearch()) return;	
	
	//저장후 재조회시-마스터 데이터셋 이벤트 비활성화
	if (this.fvSchKeyYn) {
		this.ds_Master10.set_enableevent(false);
	}

	//[업무] 데이터셋 설정 - 데이터셋 초기화, 조회조건 설정
	this.ds_Master10.clearData();
	this.ds_Detail10.clearData();
	this.ds_Input.clearData();
	
	//[업무] 조회조건 입력
	this.ds_Input.addRow();
	this.ds_Input.setColumn(0, "BGCM_YY", this.div_Search.form.edt_ClosDd.value);
	this.ds_Input.setColumn(0, "ACOM_NM", this.div_Search.form.edt_AcomNm.value);
	this.ds_Input.setColumn(0, "BUDG_GU", this.div_Search.form.edt_BudgGu.value);

	//[공통]서비스정보 초기화
	this.gfn_InitComService(this);
	
	//[공통]서비스정보 추가
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "ca:M_CB_1000_M_SL10";
	this.gfn_AddComSearchService(this, svcAddObj);
	
	//[공통]서비스 호출 변수
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	//svcCallObj.sTrid = "MST_SEARCH";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sTrid = "DTL_SEARCH";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_CA;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = "ds_Input=ds_Input" //입력 데이터셋
	svcCallObj.sOutDatset = "ds_Master10=ds_Master10";//출력 데이터셋
	svcCallObj.sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명
	svcCallObj.sComBtnDst = "SEARCH";//공통버튼구분-조회버튼
	svcCallObj.sPrgmId = this.fvComPrgmId;//프로그램ID

	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);
	
	//grd_Detail10 - 예산미편성계정 조회
	this.fn_AcomSearch();
}

/***********************************************************************************************
 * 01.02. [Vaildation] 조회 필수값 체크
 ***********************************************************************************************/
this.fn_VaildSearch = function()
{
	//조회조건 필수입력값 있으면 체크
	var arrArgs = ["this.div_Search.form.edt_ClosDd^" + this.div_Search.form.sta_ClosDd.text + "|NULL" //편성년도
			      ]; 
				  
	var sCheckGroupTitle = "검색조건";//체크그룹 타이틀

	//컴포넌트 Vaild 체크
	if (!this.gfn_CheckFormCompValid(this, arrArgs, sCheckGroupTitle)) {
		return false;
	}
	return true;
}

/***********************************************************************************************
 * 01.03. [공통] 조회조건 클릭/변경 이벤트
 ***********************************************************************************************/
/***********************************************************************************************
 *    01. [부서]
 ***********************************************************************************************/
/*---------------------------------------------------------------------------------------------
 *    [조회영역-Button] 부서 버튼 클릭 이벤트
  ---------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------
 *    [조회영역-Edit] 부서코드 변경 이벤트
  ---------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------
 *    [조회영역-Edit] 부서명 변경 이벤트
  ---------------------------------------------------------------------------------------------*/

/***********************************************************************************************
 * 2. 입력
 ***********************************************************************************************/
/***********************************************************************************************
 * 02.01. [공통버튼] 입력 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnAdd = function()
{
}

/***********************************************************************************************
 * 02.MF0.01. [Master Freeform 공통] 입력항목 클릭/변경 이벤트
 ***********************************************************************************************/
/***********************************************************************************************
 *    01. [부서]
 ***********************************************************************************************/
/*---------------------------------------------------------------------------------------------
 *    [Master 입력영역-Button] 부서 버튼 클릭 이벤트
  ---------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------
 *    [Master 입력영역-Edit] 부서코드 변경 이벤트
  ---------------------------------------------------------------------------------------------*/  

/***********************************************************************************************
 * 02.MF0.02. [Master Freeform 일반] 입력항목 클릭/변경 이벤트
 ***********************************************************************************************/
/***********************************************************************************************
 *    01. [고객]
 ***********************************************************************************************/
/*---------------------------------------------------------------------------------------------
 *    [Master 입력영역-Button] 고객 버튼 클릭 이벤트
  ---------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------
 *    [Master 입력영역-Edit] 고객코드 변경 이벤트
  ---------------------------------------------------------------------------------------------*/ 
/***********************************************************************************************
 * 02.MF0.03. [Master 데이터셋] 변경 이벤트
 ***********************************************************************************************/
/*---------------------------------------------------------------------------------------------
 *    01. [데이터셋-ds_Master10] 데이터 Row 변경 이벤트
  ---------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------
 *    02. [데이터셋-ds_Master10] Row 변경전 이벤트
  ---------------------------------------------------------------------------------------------*/
this.ds_Master10_canrowposchange = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	if (!this.fvDsRowPosChange) return;//Row변경이벤트 수행유무
	
	//데이터 변경여부 체크
	if (this.gfn_DsIsUpdated(this.ds_Master10)) {
		this.gfn_Confirm("SM003", "", "CONF.MAST_CHANGE", "fn_MsgCallback");//변경된 내역을 저장 하시겠습니까?
		return false;
	}	

	return true;
};  

this.ds_Master10_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	
	this.gfn_GridUpdateProcess(this, obj, e);//crudType 변경-수정(U)
};

/***********************************************************************************************
 * 02.MG0.01. [Master그리드-버튼] 복사 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01Copy = function()
{
};

/***********************************************************************************************
 * 02.MG0.02. [Master그리드-버튼] 행추가 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01AddRow = function()
{
};

/***********************************************************************************************
 * 02.MG0.03. [Master그리드-버튼] 행삽입 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01InsertRow = function()
{
};

/***********************************************************************************************
 * 02.MG0.04. [Master그리드-버튼] 행삭제 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01DeleteRow = function()
{
};

/***********************************************************************************************
 * 02.MG0.05. [Master그리드-버튼] 취소 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01Cancel = function()
{
};
 
/***********************************************************************************************
 * 02.MG0.06. [Master그리드] 셀 클릭 이벤트
 ***********************************************************************************************/ 
 
/***********************************************************************************************
 * 02.MG0.07. [Master 데이터셋] 변경 이벤트
 ***********************************************************************************************/
 

/***********************************************************************************************
 * 02.DG0.01. [Detail그리드-버튼] 복사 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01Copy = function()
{
};

/***********************************************************************************************
 * 02.DG0.02. [Detail그리드-버튼] 행추가 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01AddRow = function()
{	
};

/***********************************************************************************************
 * 02.DG0.03. [Detail그리드-버튼] 행삽입 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01InsertRow = function()
{
};


/***********************************************************************************************
 * 02.DG0.04. [Detail그리드-버튼] 행삭제 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01DeleteRow = function()
{	
};

/***********************************************************************************************
 * 02.DG0.05. [Detail그리드-버튼] 취소 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01Cancel = function()
{
};
 
/***********************************************************************************************
 * 02.DG0.06. [Detail그리드] 셀 클릭 이벤트
 ***********************************************************************************************/ 
/*---------------------------------------------------------------------------------------------
 *    01. [그리드-grd_Detail10] 셀클릭 이벤트
  ---------------------------------------------------------------------------------------------*/
/***********************************************************************************************
 * 02.DG0.07. [Detail 데이터셋] 변경 이벤트
 ***********************************************************************************************/
/*---------------------------------------------------------------------------------------------
 *    01. [데이터셋-ds_Detail10] 데이터변경 이벤트
  ---------------------------------------------------------------------------------------------*/
/***********************************************************************************************
 * 02.DG0.08. [Detail Tab] 변경 이벤트
 ***********************************************************************************************/
this.div_DetailInput_tab_Detail_onchanged = function(obj:nexacro.Tab,e:nexacro.TabIndexChangeEventInfo)
{
	
};

/***********************************************************************************************
 * 02.DG1.01. [Detail그리드2-버튼] 전체선택 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd02AllCheck = function()
{
};

/***********************************************************************************************
 * 02.DG1.02. [Detail그리드2-버튼] 전체해지 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd02AllUnCheck = function()
{
};

/***********************************************************************************************
 * 02.DG1.03. [Detail그리드2-버튼] 부분선택 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd02SomeCheck = function()
{
};


/***********************************************************************************************
 * 02.DG1.04. [Detail그리드2-버튼] 부분해지 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd02SomeUnCheck = function()
{
};

/***********************************************************************************************
 * 02.DG1.05. [Detail그리드2-버튼] 적용 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd02Choice = function()
{
};

/***********************************************************************************************
 * 02.DG1.06. [Detail그리드2-버튼] 취소 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd02Cancel = function()
{
};
 
/***********************************************************************************************
 * 02.DG1.05. 검색조건 클릭/변경 이벤트
 ***********************************************************************************************/ 
/***********************************************************************************************
 *    01. [부서]
 ***********************************************************************************************/
/*---------------------------------------------------------------------------------------------
 *    [검색영역-Button] 부서 버튼 클릭 이벤트
  ---------------------------------------------------------------------------------------------*/  
/*---------------------------------------------------------------------------------------------
 *    [검색영역-Edit] 부서코드 변경 이벤트
  ---------------------------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------------------------
 *    [검색영역-Edit] 부서명 변경 이벤트
  ---------------------------------------------------------------------------------------------*/

/***********************************************************************************************
 * 02.DG1.06. [첨부 파일 그리드-버튼] 파일추가 클릭 이벤트
 ***********************************************************************************************/
this.fn_FileGrd01AddRow = function()
{
};

/***********************************************************************************************
 * 02.DG1.07. [첨부 파일 그리드-버튼] 파일삭제 클릭 이벤트
 ***********************************************************************************************/
this.fn_FileGrd01DeleteRow = function()
{
};
 
/***********************************************************************************************
 * 3. 복사
 ***********************************************************************************************/
/***********************************************************************************************
 * 03.01. [공통버튼] 복사 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnCopy = function()
{ 
	var sClosDd = this.div_Search.form.edt_ClosDd.value;
	var sCoppYy = this.div_Search.form.edt_CopyYy.value;
	
	if(this.gfn_IsNull(sCoppYy)){
		//복사년도 필수체크	
		var arrMsgArg = [this.div_Search.form.sta_CopyYy.text];
		this.gfn_Alert("SM008", arrMsgArg);//복사년도는 필스입니다.
		this.div_Search.form.edt_CopyYy.setFocus();	
		return
	}
	
	if (sClosDd == sCoppYy) {
		var arrMsgArg = [sCoppYy];
		this.gfn_Alert("CA022", arrMsgArg);//편성년도와 복사년도 [&ITM0] 가 같습니다.
		this.div_Search.form.edt_CopyYy.setFocus();	
		return
	}
	
	//편성년도 데이터 존재 여부
	if (!this.fn_ChkCopy1()) return;
	
	//복사년도 데이터 존재 여부
	this.fn_ChkCopy();
}

/***********************************************************************************************
 * 4. 취소
 ***********************************************************************************************/
/***********************************************************************************************
 * 04.01. [공통버튼] 취소 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnCancel = function()
{ 
	this.ds_Master10.reset();
	this.ds_Detail10.reset();
}

/***********************************************************************************************
 * 5. 저장
 ***********************************************************************************************/
/***********************************************************************************************
 * 05.01. [공통버튼] 저장 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnSave = function()
{ 
	//변경여부 체크
	if (!this.gfn_DsIsUpdated(this.ds_Master10)) {
		this.gfn_Alert("SM036");//변경된 내용이 없습니다.
		return;
	}

	//첨부파일정보 변경시	

	//저장전 유효성 체크
	//Master 데이터 유효성 체크
	if (this.gfn_DsIsUpdated(this.ds_Master10)) {
		if (!this.fn_VaildMasterSave()) return;
	}
	
	//ds_Master10 의 내용이 없으면 저장 막음
	if (this.ds_Master10.getRowCount() == 0) {
		this.gfn_Alert("CA001");//예산편성계정 데이터가 없습니다.
		return;
	};
	
	//데이터 존재 체크
	//편성지침(T_CB_BGCM) 테이블을 무조건 지운다.
	 this.fn_VaildMasterSave1(); 
	 
	//ds_Master10 의 타입을 무조건 수정으로 넣는다. 
	if (this.ds_Master10.getRowCount() > 0){
		for (var iLoop=0; iLoop<this.ds_Master10.getRowCount(); iLoop++) {
				this.ds_Master10.setColumn(iLoop, "crudType", "I");//수정-Flag
			}
	}
	
	//Detail 데이터 유효성 체크	
	//Master 입력/수정/삭제 상태 체크

	//[공통]서비스 정보 초기화
	this.gfn_InitComService(this);
	
	//[공통]서비스정보 추가
	
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	
	//[공통]서비스 호출 변수
	var sInputDaset = "" //입력 데이터셋
	var sOutDatset = "";//출력 데이터셋
	var sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	
	//[공통]서비스 정보 추가
	svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object				 
	svcAddObj.sInsertSql = "ca:M_CB_1000_M_IN10";//저장Sql
	svcAddObj.sUpdateSql = "";//수정Sql
	svcAddObj.sDeleteSql = "";//삭제Sql
	svcAddObj.sSaveFlagColumn = "crudType";//insertSql, updateSql, deleteSql이 존재하여 신규, 수정, 삭제를 처리할 경우 기본적으로 Dataset의 getRowStates()로 판단하여 처리하며
								   //이를 Flag 컬럼으로 대체하고 싶은 경우 사용하는 [컬럼명], 해당 Flag 컬럼의 값은 신규 - I , 수정 - U , 삭제 - D의 값을 가져야 한다.

	this.gfn_AddComSaveService(this, svcAddObj);
		
	sInputDaset = "ds_Master10=ds_Master10:U" //입력 데이터셋
	
	//[공통]서비스 호출 변수
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid = "SAVE";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_CA;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = sInputDaset //입력 데이터셋
	svcCallObj.sOutDatset = sOutDatset;//출력 데이터셋
	svcCallObj.sOtherArg = sOtherArg;//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명		
	
	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);	
	
	//재조회
	this.fn_ComBtnSearch();
}

/***********************************************************************************************
 * 05.02. [Vaildation] Master 저장 필수값 체크 - 입력항목 
 ***********************************************************************************************/ 
this.fn_VaildMasterSave = function()
{	
	//[저장] Validation 설정
	var arrArgs = ["BGCM_CD^NULL"
			      ]; 
				  
	var sCheckGroupTitle = this.div_MasterView.form.grd_Master10.text;//체크그룹 타이틀
				  
	//Grid Vaild 체크
	if (!this.gfn_CheckGridValid(this.div_MasterView.form.grd_Master10, arrArgs, sCheckGroupTitle) ) {
		return false;
	}
	
	return true;
}

/***********************************************************************************************
 * 05.02.01. [Vaildation] 데이터 존재 여부 체크
 ***********************************************************************************************/  
 this.fn_VaildMasterSave1 = function()
 {
	var sNowYear = this.gfn_GetCommDate("nowYear");//금년	
	this.div_Search.form.edt_ClosDd.set_value(sNowYear);
	
	this.ds_Master11.clearData();
	
	this.ds_Master11.addRow();
	this.ds_Master11.setColumn(0, "BGCM_YY", sNowYear);
	this.ds_Master11.setColumn(0, "crudType", "D");
	
	//[공통]서비스 정보 초기화
	this.gfn_InitComService(this);
		
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "ca:M_CB_1000_M_SL11";
	this.gfn_AddComSearchService(this, svcAddObj);
	
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid = "COUNT";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_CA;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = "ds_Master11=ds_Master11" //입력 데이터셋
	svcCallObj.sOutDatset = "ds_Count=ds_Count";//출력 데이터셋
	svcCallObj.sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명
	svcCallObj.isSync = true;//동기식으로 설정할지 여부
	
	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);
	
	var YyCount = this.ds_Count.getColumn(0, "CNT");
	
	//예산편성지침 테이블을 지우기 위함.
	//무조건 지우기 때문에 막음.
// 	if (YyCount == 0) {
// 		return true;
// 	} else {	
		
		//[공통]서비스 정보 초기화
		this.gfn_InitComService(this);
		
		//[공통]서비스 정보 추가
		var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
		
		//[공통]서비스 호출 변수
		var sInputDaset = "" //입력 데이터셋
		var sOutDatset = "";//출력 데이터셋
		var sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
		
		svcAddObj.sInsertSql = "";//저장Sql
		svcAddObj.sUpdateSql = "";//수정Sql
		svcAddObj.sDeleteSql = "ca:M_CB_1000_M_DL10";//삭제Sql
		svcAddObj.sSaveFlagColumn = "crudType";//insertSql, updateSql, deleteSql이 존재하여 신규, 수정, 삭제를 처리할 경우 기본적으로 Dataset의 getRowStates()로 판단하여 처리하며
							 //이를 Flag 컬럼으로 대체하고 싶은 경우 사용하는 [컬럼명], 해당 Flag 컬럼의 값은 신규 - I , 수정 - U , 삭제 - D의 값을 가져야 한다.

		this.gfn_AddComSaveService(this, svcAddObj);
		
		//[공통]서비스 호출 변수
		var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
		svcCallObj.sTrid = "COUNT_DELETE";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
		svcCallObj.sActionName = this.G_SV_CA;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
		svcCallObj.sInputDaset = "ds_Master11=ds_Master11"
		svcCallObj.sOutDatset = "";//출력 데이터셋
		svcCallObj.sOtherArg = sOtherArg;//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
		svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명	
		//svcCallObj.isSync = true;//동기식으로 설정할지 여부
		
		//[공통]서비스 호출
		this.gfn_CallComService(this, svcCallObj);	
	/*}*/;
 }

/***********************************************************************************************
 * 05.03. [Vaildation] Detail 저장 필수값 체크 - 그리드항목
 ***********************************************************************************************/ 
this.fn_VaildDetailSave = function()
{
	return true;
}
 
/***********************************************************************************************
 * 6. 삭제
 ***********************************************************************************************/
/***********************************************************************************************
 * 06.01. [공통버튼] 삭제 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnDelete = function()
{ 
}

/***********************************************************************************************
 * 06.02. [서비스] 삭제처리
 ***********************************************************************************************/  
this.fn_SvcDelete = function() 
{ 
}

/***********************************************************************************************
 * 06.03. [Vaildation] 삭제항목 체크
 ***********************************************************************************************/  
this.fn_VaildMasterDelete = function()
{
	return true;
}

/***********************************************************************************************
 * 7. 엑셀
 ***********************************************************************************************/
/***********************************************************************************************
 * 07.01. [공통버튼] 엑셀저장 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnExcel = function()
{ 
	//출력 그리드 정보 설정
	var objGridList = ["this.div_MasterView.form.grd_Master10|" + this.div_MasterView.form.sta_Master10.text
	                  ,"this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Detail10|" + this.div_MasterInput.form.tab_Master.tpg_01.text];
	 
	var sFileName = "예산편성지침";//출력파일명
	this.gfn_ExcelExport(this, objGridList, sFileName);
}

/***********************************************************************************************
 * 8. 인쇄
 ***********************************************************************************************/
/***********************************************************************************************
 * 08.01. [공통버튼] 인쇄 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnPrint = function()
{ 
}

/***********************************************************************************************
 * 9. 결재요청
 ***********************************************************************************************/
/***********************************************************************************************
 * 09.01. [공통버튼] 결재요청 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnDecide = function()
{ 
	
}

/***********************************************************************************************
 * 09.02. [공통버튼] 결재요청 유효성체크
 ***********************************************************************************************/  
this.fn_VaildWfDecide = function() {	
	
}

/***********************************************************************************************
 * 10. 결재현황
 ***********************************************************************************************/
/***********************************************************************************************
 * 10.01. [공통버튼] 결재현황 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnProcess = function()
{ 
}

/***********************************************************************************************
 * 11. 재기안
 ***********************************************************************************************/
/***********************************************************************************************
 * 11.01. [공통버튼] 재기안 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnRecide = function()
{ 
}

/***********************************************************************************************
 * 12. 닫기
 ***********************************************************************************************/
/***********************************************************************************************
 * 12.01. [공통버튼] 닫기 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnClose = function()
{ 
	return true;
}

/***********************************************************************************************
 * 13. [CallBack] 함수
 ***********************************************************************************************/
/***********************************************************************************************
 * 13.01. [서비스] CallBack 함수 처리
 ***********************************************************************************************/ 
this.fn_Callback = function(sSvcId, nErrorCode, sErrorMsg)
{
	if(nErrorCode != 0)
	{
		return;
	}	
	switch(sSvcId)
	{
		case "MST_SEARCH": //조회		
	
			if (this.ds_Master10.getRowCount() > 0) {
				
				//저장후 재조회여부-true
				if (this.fvSchKeyYn) {
					var iFvFindRow = this.ds_Master10.findRowExpr("BGCM_YY=='" + this.fvSchKey01 + "'");//업무Key Row 찾기

					//마스터 데이터셋 이벤트가 비활성시 - 활성화
					if (!this.ds_Master10.enableevent) {
						this.ds_Master10.set_enableevent(true);
					}
				
					if (iFvFindRow > -1) {
						if (iFvFindRow == 0) {
							this.ds_Master10.set_rowposition(-1);
						} 
						this.ds_Master10.set_rowposition(iFvFindRow);
					} else {
						this.ds_Master10.set_rowposition(0);
					}
				}				
				
				//입력영역 활성화
				this.div_MasterView.set_enable(true);
					
				//첨부파일정보 권한설정
				
				//[공통]그리드NoData Text 초기화 설정
				this.gfn_InitGridNoDataText(this.div_MasterView.form.grd_Master10);
				
				/**/
// 				if (this.ds_Master10.getRowCount() > 0){
				this.ds_Master10.addColumn("crudType", "string");
// 				//if (this.ds_Master10.rowposition > -1) {
// 				trace("123");
					for (var iLoop=0; iLoop<this.ds_Master10.getRowCount(); iLoop++) {
						this.ds_Master10.setColumn(iLoop, "crudType", "I");//수정-Flag
					}
// 				}
				/**/
				
			} else {
				
				//[공통]그리드NoData Text설정
				this.gfn_SetGridNoDataText(this.div_MasterView.form.grd_Master10);
				
				//마스터 데이터셋 이벤트가 비활성시 - 활성화
				if (!this.ds_Master10.enableevent) {
					this.ds_Master10.set_enableevent(true);
				}
			
				//입력영역 비활성화
				this.div_MasterView.set_enable(false);
					
				//첨부파일정보 권한설정			
			}
			
			//저장후 재조회여부-true
			if (this.fvSchKeyYn) {
				this.fvSchKeyYn = false;//저장후 재조회여부
			}			
	
			break;
		case "SAVE":   //저장		

			//첨부파일 추가건이 없으면
			break;	
			
		case "DTL_SEARCH": //조회		
			this.ds_Master10.addColumn("s_chk", "string");
			this.ds_Master10.addColumn("crudType", "string");
			
			this.ds_Detail10.addColumn("s_chk", "string");
			
// 			if (this.ds_Master10.getRowCount() > 0){
// 				for (var iLoop=0; iLoop<this.ds_Master10.getRowCount(); iLoop++) {
// 						this.ds_Master10.setColumn(iLoop, "crudType", "I");//수정-Flag
// 					}
// 			} else {
// 				this.gfn_InitGridNoDataText(this.div_MasterView.form.grd_Master10);
// 			}
			
			break;			
			
		case "DTLS_SEARCH":			
			
			break;			
			
		case "DELETE": //삭제		
			this.fn_ComBtnSearch();//조회
			break;	
			
		case "MST_COPY":
			var arrMsgArg;
			
			
			if (this.ds_return.getRowCount() > 0) {
				if (this.ds_return.getColumn(0, "O_RET_CODE") == "TRUE") {
					trace("TRUE  TRUE");
					arrMsgArg = [" "];
					this.gfn_Alert("SM066", arrMsgArg);//[&ITM0] 처리가 완료되었습니다.
					
				} else {
					arrMsgArg = [" "];
					this.gfn_Alert("SM067", arrMsgArg);//[&ITM0] 처리시 오류가 발생하였습니다.			
				}
			} else {
				var arrMsgArg = [" "];
				this.gfn_Alert("SM067", arrMsgArg);//[&ITM0] 처리시 오류가 발생하였습니다.
			}
			break;	
		   
	}
};

/***********************************************************************************************
 * 13.02. [팝업] CallBack 함수 처리
          strId : 팝업호출시 지정한 팝업ID
	      rtnValue : 팝업창에서 close시 지정한 반환값
          주의 : Open(popuptype=modeless)창은 팝업콜백을 지원하지 않음
 ***********************************************************************************************/ 
this.fn_PopupCallback = function(strId, rtnValue)
{
	
};
 
/***********************************************************************************************
 * 13.03. [메세지] CallBack 함수 처리
 ***********************************************************************************************/  
this.fn_MsgCallback = function (strId, strVal)
{
	//삭제여부
	if (strId == "CONF.DELETE") {
		if(strVal )
		{
			this.fn_SvcDelete();//삭제 서비스 호출
		}
	//MASTER 변경사항 저장여부
	} else if (strId == "CONF.MAST_CHANGE") {
		if(strVal )
		{
			this.fn_ComBtnSave();//저장 서비스 호출
		} else {
			//데이터 변경여부 체크
			if (this.gfn_DsIsUpdated(this.ds_Master10)) {
				this.gfn_UndoColumn(this.div_MasterView.form.grd_Master10);
			}		
			
			if (this.gfn_DsIsUpdated(this.ds_Detail10)) {
				this.gfn_UndoColumn(this.div_DetailInput.form.tab_Detail.tpg_01.form.grd_Detail10);
			}				
		}
	//복사년도 중복 저장여부
	} else if (strId == "CONF.MAST_DELETE") {
		if(strVal)
		{
			this.fn_CopyYy("Y");
		}
		
	}
}; 
 
/***********************************************************************************************
 * 14. [화면 사이즈] 조정 버튼 이벤트
 ***********************************************************************************************/
/***********************************************************************************************
 * 14.01. [조회영역-▲] 화면 사이즈조정 버튼 이벤트
 ***********************************************************************************************/ 
this.btn_DivMoveMi_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//[공통] 버튼 변수
	var btnObj = new Object();//[공통] 버튼 변수 정보 Object
	btnObj.DivSearch = "this.div_Search";//조회영역 Div
	btnObj.DivMstLeft = "this.div_MasterView";//Master영역 Left Div : Master영역이 하나인경우에는 Left에 설정
	btnObj.DivMstRight = "this.div_MasterInput";//Master영역 Right Div
	btnObj.DivDetail = "";//Detail영역 Div
	btnObj.MstLeft = 1128;//Master영역 Div Left
	btnObj.MstTop = 90;//Master영역 Div Top
	btnObj.MstHeight = "";//Master영역 Div Height : Height가 없는경우 ""로 입력
	btnObj.MoveBtnDtl = "";//Detail영역 Move 버튼 : 없으면 ""로 입력
	this.gfn_MoveSeBtn(obj, btnObj);//Master영역 접고/펼치기 버튼 이벤트
};

/***********************************************************************************************
 * 14.02. [Master영역-▶] 화면 사이즈조정 버튼 이벤트
 ***********************************************************************************************/ 
this.div_MasterView_btn_DivMoveMv_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//[공통] 버튼 변수
	var btnObj = new Object();//[공통] 버튼 변수 정보 Object
	btnObj.DivMstLeft = "this.div_MasterView";//Master영역 Left Div : Master영역이 하나인경우에는 Left에 설정
	btnObj.DivMstRight = "this.div_MasterInput";//Master영역 Right Div
	btnObj.MstWidth = 1040;//Master Left 영역 Div Width	
	btnObj.MstHeight = "";//Master Left영역 Div Height : Height가 없는경우 ""로 입력
	btnObj.MoveBtnSch = "this.div_Search";//조회영역밑 Move 버튼
	btnObj.MoveBtnDtl = "";//Detail영역 Move 버튼 : 없으면 ""로 입력
	this.gfn_MoveMlBtnBaseBottom(obj, btnObj);//Master Left 영역 접고/펼치기 버튼 이벤트
	/* ↑Detailt 이 없으면 이걸 사용 */
};

/***********************************************************************************************
 * 14.03. [Detail영역-▲] 화면 사이즈조정 버튼 이벤트
 ***********************************************************************************************/ 
this.div_DetailInput_btn_DivMoveDi_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//[공통] 버튼 변수
	var btnObj = new Object();//[공통] 버튼 변수 정보 Object
	btnObj.DivMstLeft = "this.div_MasterView";//Master영역 Left Div : Master영역이 하나인경우에는 Left에 설정
	btnObj.DivMstRight = "this.div_MasterInput";//Master영역 Right Div
	btnObj.DivDetail = "this.div_DetailInput";//Detail영역 Div
	btnObj.DtlTop = 378;//Detail영역 Div Top
	btnObj.MoveBtnSch = "this.btn_DivMoveMi";//조회영역밑 Move 버튼
	this.gfn_MoveDtlBtn(obj, btnObj);//Detail영역 접고/펼치기 버튼 이벤트				
};

/***********************************************************************************************
 * 15. [사용자정의 함수]
 ***********************************************************************************************/

/***********************************************************************************************
 * 15.01. [공통 그리드 버튼] 입력 버튼 설정
 ***********************************************************************************************/ 
this.fn_SetGridInputButton = function()
{	
}

/***********************************************************************************************
 * 15.02. [공통 그리드 버튼] 검색 Tab 버튼 설정
 ***********************************************************************************************/ 
this.fn_SetGridChoiceButton = function()
{	
}

/***********************************************************************************************
 * 15.03. [공통 첨부파일] 화면 설정
 ***********************************************************************************************/ 
this.fn_SetTabComAttachFile = function()
{
}

/***********************************************************************************************
 * 15.04. [공통 그리드 버튼] 파일 버튼 설정
 ***********************************************************************************************/ 
this.fn_SetGridFileButton = function()
{	
}

/*---------------------------------------------------------------------------------------------
 * 15.05. ▶ 클릭 이벤트
  ---------------------------------------------------------------------------------------------*/
this.btn_Add_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.ds_Master10.rowposition > -1) {
		if (this.ds_Master10.getCaseCount("s_chk=='1'") > 0) {
			for (var iLoop=0; iLoop<this.ds_Master10.getRowCount(); iLoop++) {
				if (this.ds_Master10.getColumn(iLoop, "s_chk") == "1") {
					var iRow = this.ds_Detail10.addRow();
					
					this.ds_Detail10.setColumn(iRow, "ACOM_CD", this.ds_Master10.getColumn(iLoop, "ACOM_CD"));
					this.ds_Detail10.setColumn(iRow, "ACOM_NM", this.ds_Master10.getColumn(iLoop, "ACOM_NM"));
					this.ds_Detail10.setColumn(iRow, "BUDG_GU", this.ds_Master10.getColumn(iLoop, "BUDG_GU"));
					
					this.ds_Master10.deleteRow(iLoop);
					iLoop = iLoop - 1;
				}
			}
			
			this.ds_Detail10.set_keystring("S:ACOM_CD");
			
		} else {
			this.gfn_Alert("SM046");//선택된 내용이 없습니다.
		}
	}
};

/*---------------------------------------------------------------------------------------------
 * 15.06. ◀ 클릭 이벤트
  ---------------------------------------------------------------------------------------------*/
this.btn_Add00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var sNowYear = this.gfn_GetCommDate("nowYear");//금년	
	this.div_Search.form.edt_ClosDd.set_value(sNowYear);
	
	if (this.ds_Detail10.rowposition > -1) {
		if (this.ds_Detail10.getCaseCount("s_chk=='1'") > 0) {
			for (var iLoop=0; iLoop<this.ds_Detail10.getRowCount(); iLoop++) {
				if (this.ds_Detail10.getColumn(iLoop, "s_chk") == "1") {
					var iRow = this.ds_Master10.addRow();
					
					this.ds_Master10.setColumn(iRow, "ACOM_CD", this.ds_Detail10.getColumn(iLoop, "ACOM_CD"));
					this.ds_Master10.setColumn(iRow, "ACOM_NM", this.ds_Detail10.getColumn(iLoop, "ACOM_NM"));
					this.ds_Master10.setColumn(iRow, "BUDG_GU", this.ds_Detail10.getColumn(iLoop, "BUDG_GU"));
					this.ds_Master10.setColumn(iRow, "BGCM_YN", "0");
					this.ds_Master10.setColumn(iRow, "BGCM_CD", "0010"); //차후 콤보로 변경
					this.ds_Master10.setColumn(iRow, "BGCM_YY", sNowYear);
					this.ds_Master10.setColumn(iRow, "crudType", "I");//수정-Flag
					
					this.ds_Detail10.deleteRow(iLoop);
					iLoop = iLoop - 1;
				}
			}
		} else {
			this.gfn_Alert("SM046");//선택된 내용이 없습니다.
		}
	}	
};

/***********************************************************************************************
 * 16. 복사년도 데이터 존재 여부
 ***********************************************************************************************/ 
this.fn_ChkCopy = function() 
{
	var sNowYear = this.div_Search.form.edt_CopyYy.value; //복사년도(TO)
	
	this.ds_Master11.clearData();
	
	this.ds_Master11.addRow();
	this.ds_Master11.setColumn(0, "BGCM_YY", sNowYear);
	this.ds_Master11.setColumn(0, "crudType", "D");
	
	//[공통]서비스 정보 초기화
	this.gfn_InitComService(this);
		
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "ca:M_CB_1000_M_SL11";
	this.gfn_AddComSearchService(this, svcAddObj);
	
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid = "COUNT";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_CA;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = "ds_Master11=ds_Master11" //입력 데이터셋
	svcCallObj.sOutDatset = "ds_Count=ds_Count";//출력 데이터셋
	svcCallObj.sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명
	svcCallObj.isSync = true;//동기식으로 설정할지 여부
	
	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);
	
	var YyCount = this.ds_Count.getColumn(0, "COUNT");
	
	if (YyCount == 0) {
		this.fn_CopyYy("N");
	} else {		
		var arrMsgArg = [this.div_Search.form.edt_CopyYy.text];
		this.gfn_Confirm("CA021", arrMsgArg, "CONF.MAST_DELETE", "fn_MsgCallback");//복사년도 [&ITM0] 로 등록된 자료가 있습니다. \n계속 복사 진행하시겠습니까?
	};
}

/***********************************************************************************************
 * 17. 편성년도 데이터 존재 여부
 ***********************************************************************************************/ 
this.fn_ChkCopy1 = function() 
{
	var sNowYear = this.div_Search.form.edt_ClosDd.value; //편성년도
	
	this.ds_Master11.clearData();
	
	this.ds_Master11.addRow();
	this.ds_Master11.setColumn(0, "BGCM_YY", sNowYear);
	this.ds_Master11.setColumn(0, "crudType", "D");
	
	//[공통]서비스 정보 초기화
	this.gfn_InitComService(this);
		
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "ca:M_CB_1000_M_SL11";
	this.gfn_AddComSearchService(this, svcAddObj);
	
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid = "COUNT";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_CA;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = "ds_Master11=ds_Master11" //입력 데이터셋
	svcCallObj.sOutDatset = "ds_Count=ds_Count";//출력 데이터셋
	svcCallObj.sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명
	svcCallObj.isSync = true;//동기식으로 설정할지 여부
	
	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);
	
	var YyCount = this.ds_Count.getColumn(0, "COUNT");
	
	if (YyCount == 0) {
		var arrMsgArg = [sNowYear];
		this.gfn_Alert("CA023", arrMsgArg);//해당 편성년도 [&ITM0] 로 등록된 데이터가 없습니다.
		return false;	
	} else {
	    return true;
	};
}

/***********************************************************************************************
 * 18. 복사년도 데이터 저장
 ***********************************************************************************************/ 
 this.fn_CopyYy = function(sDeleGu) 
 {
	this.ds_Input.clearData();
	this.ds_Input.addRow();
	
	this.ds_Input.addRow();
	this.ds_Input.setColumn(0, "BGCM_YY", this.div_Search.form.edt_ClosDd.value);
	this.ds_Input.setColumn(0, "ACOM_NM", this.div_Search.form.edt_AcomNm.value);
	this.ds_Input.setColumn(0, "BUDG_GU", this.div_Search.form.edt_BudgGu.value);
	this.ds_Input.setColumn(0, "COPY_YY", this.div_Search.form.edt_CopyYy.value);
	this.ds_Input.setColumn(0, "DELE_GU", sDeleGu); //프로시져에서 DELETE 구문 진행여부용
	
	//[공통]서비스정보 초기화
	this.gfn_InitComService(this);
	
	//[공통]서비스정보 추가
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "ca:M_CB_1000_M_UP11";
	this.gfn_AddComSearchService(this, svcAddObj);
	
	//[공통]서비스 호출 변수
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid 		= "MST_COPY";			//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName 	= this.G_SV_CA;			//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset 	= "ds_Input=ds_Input" 	//입력 데이터셋
	svcCallObj.sOutDatset 	= "ds_return=ds_return";//출력 데이터셋
	svcCallObj.sOtherArg 	= "";					//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";		//서버에서 처리가 완료된 후 Callback 받을 Function 명

	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);
 }

]]></Script>
  </Form>
</FDL>
