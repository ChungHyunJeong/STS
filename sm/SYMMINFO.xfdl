<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="SYMMINFO" width="1040" height="600" titletext="증상정보" scrollbartype="none" onclose="fn_FormClose" onload="fn_FormOnload">
    <Layouts>
      <Layout height="600" width="1040">
        <Div id="div_Search" taborder="0" left="12" top="50" height="38" cssclass="div_WF_Search" right="12" formscrollbartype="none none">
          <Layouts>
            <Layout>
              <Static id="Static00" taborder="0" text="분류" left="16" top="6" width="80" height="26" cssclass="sta_WF_SLabel"/>
              <Combo id="cbo_SymmCd" taborder="1" text="" left="96" top="6" height="24" width="247" onclick="Common_onclick" codecolumn="SYMM_CD" datacolumn="SYMM_NM" innerdataset="ds_QmSymm" onitemchanged="div_PopupTitle_btn_Search_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="div_PopupTitle" taborder="3" left="0" top="0" height="44" right="0" cssclass="div_WF_PopupTop">
          <Layouts>
            <Layout>
              <Button id="btn_Close" taborder="0" text="닫기" top="9" width="70" height="26" right="14" cssclass="bt_WF_PopupClose2" onclick="div_PopupTitle_btn_Close_onclick"/>
              <Static id="sta_PopupTitle" taborder="1" text="증상코드 검색" left="20" top="10" width="300" height="24" cssclass="sta_WF_PopupTitle"/>
              <Button id="btn_Search" taborder="2" text="조회" top="8" width="65" right="161" visible="true" cssclass="bt_WF_PopupSearch" height="28" onclick="div_PopupTitle_btn_Search_onclick"/>
              <Button id="btn_Choice" taborder="3" text="선택" top="8" width="65" right="90" visible="true" cssclass="bt_WF_PopupSelect" height="28" onclick="div_PopupTitle_btn_Choice_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Grid id="grd_Master10" taborder="1" left="12" top="98" width="280" binddataset="ds_Master10" autofittype="col" bottom="14" selecttype="cell">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="280"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="증상명"/>
              </Band>
              <Band id="body">
                <Cell text="bind:TREE_NM" displaytype="treeitemcontrol" edittype="tree" treelevel="bind:SYMM_LV" treestartlevel="1"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="grd_Master20" taborder="2" left="grd_Master10:13" top="98" binddataset="ds_Master20" autofittype="col" right="12" bottom="14" cellsizingtype="col" autoenter="select" selecttype="cell" oncelldblclick="grd_Master20_oncelldblclick" onkeyup="grd_Master20_onkeyup">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="35"/>
                <Column size="70"/>
                <Column size="180"/>
                <Column size="70"/>
                <Column size="50"/>
                <Column size="50"/>
                <Column size="60"/>
                <Column size="60"/>
                <Column size="150"/>
              </Columns>
              <Rows>
                <Row size="26" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="No."/>
                <Cell col="1" text="증상코드"/>
                <Cell col="2" text="증상명"/>
                <Cell col="3" text="상위코드"/>
                <Cell col="4" text="레벨"/>
                <Cell col="5" text="정렬"/>
                <Cell col="6" text="기표여부"/>
                <Cell col="7" text="사용여부"/>
                <Cell col="8" text="비고"/>
              </Band>
              <Band id="body">
                <Cell expr="currow+1" text="bind:Column0" displaytype="text" textAlign="center"/>
                <Cell col="1" text="bind:SYMM_CD" displaytype="normal" textAlign="center"/>
                <Cell col="2" text="bind:TREE_NM" displaytype="normal" textAlign="left"/>
                <Cell col="3" text="bind:TSYM_CD" displaytype="normal" textAlign="center"/>
                <Cell col="4" text="bind:SYMM_LV" displaytype="normal" textAlign="center"/>
                <Cell col="5" text="bind:SORT_NO" displaytype="normal" textAlign="center"/>
                <Cell col="6" text="bind:INPU_YN" displaytype="checkboxcontrol" textAlign="center"/>
                <Cell col="7" text="bind:USED_YN" displaytype="checkboxcontrol" textAlign="center"/>
                <Cell col="8" text="bind:REMK_NM" displaytype="normal" textAlign="left"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_Input">
        <ColumnInfo>
          <Column id="SYMM_CD" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_QmSymm">
        <ColumnInfo>
          <Column id="SYMM_CD" type="STRING" size="256"/>
          <Column id="SYMM_NM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Master10" onrowposchanged="ds_Master10_onrowposchanged">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="SYMM_CD" type="STRING" size="256"/>
          <Column id="SYMM_NM" type="STRING" size="256"/>
          <Column id="TREE_NM" type="STRING" size="256"/>
          <Column id="SYMM_LV" type="STRING" size="256"/>
          <Column id="TSYM_CD" type="STRING" size="256"/>
          <Column id="SORT_NO" type="STRING" size="256"/>
          <Column id="INPU_YN" type="STRING" size="256"/>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Master20">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="SYMM_CD" type="STRING" size="256"/>
          <Column id="SYMM_NM" type="STRING" size="256"/>
          <Column id="TREE_NM" type="STRING" size="256"/>
          <Column id="SYMM_LV" type="STRING" size="256"/>
          <Column id="TSYM_CD" type="STRING" size="256"/>
          <Column id="SORT_NO" type="STRING" size="256"/>
          <Column id="INPU_YN" type="STRING" size="256"/>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  @화면ID   : SYMMINFO
*  @화면설명 : 증상보고
*  @시스템명 : (QM) 시스템
*  @작성자   : 홍윤기
*  @작성일   : 2022.04.01
*  @Desction    
******************* 소스 수정 이력 ************************************************************
*  일자          		수정자                비고
*************************************************************************************************
*  2022.04.01     	    홍윤기 	           최초 생성 
*************************************************************************************************
*/

/***********************************************************************************************
 * 0. 폼로드
 ***********************************************************************************************/
/***********************************************************************************************
 * 00.01. Form Include 선언
 ***********************************************************************************************/

/************************************************************************************************
 * 2. Form 변수 선언 영역
 ************************************************************************************************/
this.fvComPrgmId = "";//[필수]프로그램ID-메인화면기준, 팝업일경우 해당 메인화면의 프로그램ID

/***********************************************************************************************
 * 00.02. Form 변수 선언
 ***********************************************************************************************/
/***********************************************************************************************
 * 00.03. Form Onload 이벤트
 ***********************************************************************************************/
this.fn_FormOnload = function (obj:Form, e:LoadEventInfo)
{	

 	this.fn_FormComInit();//[공통] 화면로드시 초기 설정 함수
 	this.fn_FormBizInit();//[업무] 화면로드시 초기 설정 함수 
}

/***********************************************************************************************
 * 00.04. Form [공통] 초기설정 함수 - 필수
 ***********************************************************************************************/
this.fn_FormComInit = function() 
{
	this.gfn_CommFormOnLoad(this);//[공통] 화면로드시 처리 함수(다국어등)
	this.gfn_SetGrid(this.grd_Master10);//[공통]그리드 이벤트 설정 - 증상정보Tree
	this.gfn_SetGrid(this.grd_Master20);//[공통]그리드 이벤트 설정 - 증상정보목록
	
}

/***********************************************************************************************
 * 00.05. Form [업무] 초기설정 함수
 ***********************************************************************************************/
this.fn_FormBizInit = function() 
{
	//[업무] 일반콤보조회
	this.fn_ComboSearch();	

	//콤보 조회 후 자동조회
}

/***********************************************************************************************
 * 00.06. Form [업무] 일반콤보 조회 함수
 ***********************************************************************************************/
this.fn_ComboSearch = function() 
{
	//[공통]서비스정보 초기화
	this.gfn_InitComService(this);
	
	//[공통]서비스정보 추가
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "qm:M_QM_SYMM_C_SL10";	//증상코드
	this.gfn_AddComSearchService(this, svcAddObj);

	//[공통]서비스 호출 변수
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid = "COMBO_SEARCH";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_QM;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = "ds_Input=ds_Input" //입력 데이터셋
	svcCallObj.sOutDatset = "ds_QmSymm=ds_QmSymm";//출력 데이터셋
	svcCallObj.sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명

	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);
}

/***********************************************************************************************
 * 00.07. Form OnClose 이벤트
 ***********************************************************************************************/
 
/***********************************************************************************************
 * 00.08. Form OnSize 이벤트
 ***********************************************************************************************/
this.fn_FormOnsize = function(obj:nexacro.Form,e:nexacro.SizeEventInfo)
{ 

	if (obj.width > 1040) {
		this.grd_Master10.set_autofittype("col");
	} else {
		this.grd_Master10.set_autofittype("none");
	}

};

/***********************************************************************************************
 * 1. 조회 영역
 ***********************************************************************************************/
/***********************************************************************************************
 * 01.01. [팝업버튼] 조회 버튼 클릭 이벤트
 ***********************************************************************************************/
this.div_PopupTitle_btn_Search_onclick = function()
{ 
	
	//[업무] 데이터셋 설정 - 데이터셋 초기화, 조회조건 설정
	this.ds_Input.clearData();
	this.ds_Master10.clearData();
	
	//[업무] 조회조건 입력
	this.ds_Input.addRow();
	this.ds_Input.setColumn(0, "SYMM_CD", this.div_Search.form.cbo_SymmCd.value);

	//[공통]서비스정보 초기화
	this.gfn_InitComService(this);
	
	//[공통]서비스정보 추가
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "qm:M_QM_SYMM_M_SL10";
	this.gfn_AddComSearchService(this, svcAddObj);
	
	//[공통]서비스 호출 변수
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid 		= "MST10_SEARCH";			//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName 	= this.G_SV_QM;			//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset 	= "ds_Input=ds_Input" 	//입력 데이터셋
	svcCallObj.sOutDatset 	= "ds_Master10=ds_Master10";//출력 데이터셋
	svcCallObj.sOtherArg 	= "";					//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";		//서버에서 처리가 완료된 후 Callback 받을 Function 명

	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);			
}

/***********************************************************************************************
 * 01.02. [Vaildation] 조회 필수값 체크
 ***********************************************************************************************/

/***********************************************************************************************
 * 01.03. [공통] 조회조건 클릭/변경 이벤트
***********************************************************************************************/

/***********************************************************************************************
 * 2. 입력
 ***********************************************************************************************/
/***********************************************************************************************
 * 02.01. [공통버튼] 입력 버튼 클릭 이벤트
 ***********************************************************************************************/ 
 /***********************************************************************************************
 * 02.MG0.01. [Master 데이터셋] 변경 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.MG0.02. [Master10 그리드] 더블클릭 이벤트
 ***********************************************************************************************/ 
this.grd_Master20_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if (e.row > -1) {
		var mRow = this.ds_Master20.rowposition;
		var sInpuYn = this.ds_Master20.getColumn(mRow, "INPU_YN");	//기표여부
		
		if (sInpuYn == "1") {		//기표여부 대상시
			this.fn_Choice(mRow);
		}
	}	
}; 

/***********************************************************************************************
 * 02.MG0.03. [Master10 그리드] ENTER KEY 줄선택 이벤트
 ***********************************************************************************************/  
this.grd_Master20_onkeyup = function(obj:nexacro.Grid,e:nexacro.KeyEventInfo)
{
	if(e.keycode == "13"){
		var mRow = this.ds_Master20.rowposition;
		var sInpuYn = this.ds_Master20.getColumn(mRow, "INPU_YN");	//기표여부
		
		if (sInpuYn == "1") {		//기표여부 대상시		
			this.fn_Choice(mRow);
		}
	}
}; 
 
/***********************************************************************************************
 * 3. 복사
 ***********************************************************************************************/
/***********************************************************************************************
 * 03.01. [팝업버튼] 복사 버튼 클릭 이벤트
 ***********************************************************************************************/ 

/***********************************************************************************************
 * 4. 취소
 ***********************************************************************************************/
/***********************************************************************************************
 * 04.01. [팝업버튼] 취소 버튼 클릭 이벤트
 ***********************************************************************************************/ 

/***********************************************************************************************
 * 5. 저장
 ***********************************************************************************************/
/***********************************************************************************************
 * 05.01. [팝업버튼] 저장 버튼 클릭 이벤트
 ***********************************************************************************************/ 

/***********************************************************************************************
 * 05.02. [Vaildation] Master 저장 필수값 체크 - 입력항목 
 ***********************************************************************************************/ 
this.fn_VaildMasterSave = function()
{
}

/***********************************************************************************************
 * 05.03. [Vaildation] Detail 저장 필수값 체크 - 그리드항목
 ***********************************************************************************************/ 
this.fn_VaildDetailSave = function()
{
}
 
/***********************************************************************************************
 * 6. 삭제
 ***********************************************************************************************/
/***********************************************************************************************
 * 06.01. [공통버튼] 삭제 버튼 클릭 이벤트
 ***********************************************************************************************/  
/***********************************************************************************************
 * 06.02. [서비스] 삭제처리
 ***********************************************************************************************/  

/***********************************************************************************************
 * 06.03. [Vaildation] 삭제항목 체크
 ***********************************************************************************************/  
this.fn_VaildMasterDelete = function()
{
}

/***********************************************************************************************
 * 7. 엑셀
 ***********************************************************************************************/
/***********************************************************************************************
 * 07.01. [팝업버튼] 엑셀저장 버튼 클릭 이벤트
 ***********************************************************************************************/  

/***********************************************************************************************
 * 8. 인쇄
 ***********************************************************************************************/
/***********************************************************************************************
 * 08.01. [팝업버튼] 인쇄 버튼 클릭 이벤트
 ***********************************************************************************************/  

/***********************************************************************************************
 * 9. 결재요청
 ***********************************************************************************************/
/***********************************************************************************************
 * 09.01. [팝업버튼] 결재요청 버튼 클릭 이벤트
 ***********************************************************************************************/  

/***********************************************************************************************
 * 10. 결재현황
 ***********************************************************************************************/
/***********************************************************************************************
 * 10.01. [팝업버튼] 결재현황 버튼 클릭 이벤트
 ***********************************************************************************************/  

/***********************************************************************************************
 * 11. 재기안
 ***********************************************************************************************/
/***********************************************************************************************
 * 11.01. [팝업버튼] 재기안 버튼 클릭 이벤트
 ***********************************************************************************************/ 

/***********************************************************************************************
 * 12. 닫기
 ***********************************************************************************************/
/***********************************************************************************************
 * 12.01. [팝업버튼] 닫기 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.div_PopupTitle_btn_Close_onclick = function()
{ 
	this.gfn_PopClose();
}

/***********************************************************************************************
 * 13. 선택
 ***********************************************************************************************/
/***********************************************************************************************
 * 13.01. [팝업버튼] 선택 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.div_PopupTitle_btn_Choice_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var mRow = this.ds_Master20.rowposition;
	var sInpuYn = this.ds_Master20.getColumn(mRow, "INPU_YN");	//기표여부
	
	if (sInpuYn == "1") {		//기표여부 대상시	
		this.fn_Choice(mRow);
	}
}


/***********************************************************************************************
 * 13.02. [사용자함수] 선택한 정보 부모창 리턴 함수 
 ***********************************************************************************************/ 
this.fn_Choice = function(iRow) {
	if (iRow > -1) {	
	
        rtnValue = "({" +
                        ' COMM_CD:"' + this.ds_Master20.getColumn(iRow, "COMM_CD") + '"'+  //0.회사코드
                        ',SYMM_CD:"' + this.ds_Master20.getColumn(iRow, "SYMM_CD") + '"'+  //1.증상코드
                        ',SYMM_NM:"' + this.ds_Master20.getColumn(iRow, "SYMM_NM") + '"'+  //2.증상명
                        ',SYMM_LV:"' + this.ds_Master20.getColumn(iRow, "SYMM_LV") + '"'+  //3.증상레벨
                        ',TSYM_CD:"' + this.ds_Master20.getColumn(iRow, "TSYM_CD") + '"'+  //4.상위증상코드
                        ',INPU_YN:"' + this.ds_Master20.getColumn(iRow, "INPU_YN") + '"'+  //5.기표여부
                        ',SORT_NO:"' + this.ds_Master20.getColumn(iRow, "SORT_NO") + '"'+  //6.정렬순서
                        ',USED_YN:"' + this.ds_Master20.getColumn(iRow, "USED_YN") + '"'+  //7.사용여부
                        ',REMK_NM:"' + this.ds_Master20.getColumn(iRow, "REMK_NM") + '"'+  //8.비고
                "})";
		this.gfn_PopClose(rtnValue);
	} else {
		this.gfn_Alert("SM046");//선택된 내용이 없습니다.
		return;		
	}
}

/***********************************************************************************************
 * 14. [CallBack] 함수
 ***********************************************************************************************/
/***********************************************************************************************
 * 14.01. [서비스] CallBack 함수 처리
 ***********************************************************************************************/ 
this.fn_Callback = function(sSvcId, nErrorCode, sErrorMsg)
{
	if(nErrorCode != 0)
	{
		return;
	}	
	switch(sSvcId)
	{
		case "MST10_SEARCH": //조회	
			//조회시 focus 이동
			this.grd_Master10.setFocus();
		
			break;						

		case "COMBO_SEARCH": //조회	
 			if (this.ds_QmSymm.getRowCount() > 0) {
 				this.ds_QmSymm.insertRow();
 				this.ds_QmSymm.setColumn(0, "SYMM_NM", "ALL");
 				this.div_Search.form.cbo_SymmCd.set_index(0);
 			}

			//조회시 바로조회
			this.div_PopupTitle_btn_Search_onclick();//조회

			break;						
	}
};


/***********************************************************************************************
 * 14.02. [팝업] CallBack 함수 처리
          strId : 팝업호출시 지정한 팝업ID
	      rtnValue : 팝업창에서 close시 지정한 반환값
          주의 : Open(popuptype=modeless)창은 팝업콜백을 지원하지 않음
 ***********************************************************************************************/ 
this.fn_PopupCallback = function(strId, rtnValue)
{

};
 
/***********************************************************************************************
 * 14.03. [메세지] CallBack 함수 처리
 ***********************************************************************************************/  
this.fn_MsgCallback = function (strId, strVal)
{
}; 




this.ds_Master10_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	var sInpuYn = this.ds_Master10.getColumn(this.ds_Master10.rowposition, "INPU_YN");	//기표여부
	var sSymnCd = "";	//증상코드
	
	if (sInpuYn == "0") {	//기표여부 대상이 아닌경우
		sSymnCd = this.ds_Master10.getColumn(this.ds_Master10.rowposition, "SYMM_CD");	//증상코드
	} else {				//기표여부 대상
		sSymnCd = this.ds_Master10.getColumn(this.ds_Master10.rowposition, "TSYM_CD");	//증상코드(상위코드)
	}
	
	if (!this.gfn_IsNull(sSymnCd)) {	//증상코드가 존재하지 않거나, 최상위(0000)인 경우는 제외
		
		//[업무] 데이터셋 설정 - 데이터셋 초기화, 조회조건 설정
		this.ds_Input.clearData();
		this.ds_Master20.clearData();
		
		//[업무] 조회조건 입력
		this.ds_Input.addRow();
		this.ds_Input.setColumn(0, "SYMM_CD", sSymnCd);	//상위코드

		//[공통]서비스정보 초기화
		this.gfn_InitComService(this);
		
		//[공통]서비스정보 추가
		var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
		svcAddObj.sSelectSql = "qm:M_QM_SYMM_M_SL20";
		this.gfn_AddComSearchService(this, svcAddObj);

		//[공통]서비스 호출 변수
		var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
		svcCallObj.sTrid 		= "MST20_SEARCH";			//Transaction ID 등 callback에서 넘겨 받을 String을 지정
		svcCallObj.sActionName 	= this.G_SV_QM;			//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
		svcCallObj.sInputDaset 	= "ds_Input=ds_Input" 	//입력 데이터셋
		svcCallObj.sOutDatset 	= "ds_Master20=ds_Master20";//출력 데이터셋
		svcCallObj.sOtherArg 	= "";					//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
		svcCallObj.sCallBackFnc = "fn_Callback";		//서버에서 처리가 완료된 후 Callback 받을 Function 명

		//[공통]서비스 호출
		this.gfn_CallComService(this, svcCallObj);			

	}
	
};
]]></Script>
  </Form>
</FDL>
