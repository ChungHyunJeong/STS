<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="M_PP_0310" width="1442" height="695" titletext="자산Spec관리" onload="fn_FormOnload" onclose="fn_FormClose">
    <Layouts>
      <Layout height="695" width="1442">
        <Div id="div_Search" taborder="0" left="14" top="12" height="66" cssclass="div_WF_Search" formscrollbartype="none none" right="14" text="">
          <Layouts>
            <Layout>
              <Static id="sta_UsedYn" taborder="0" text="사용여부" left="16" top="6" width="80" height="24" cssclass="sta_WF_SLabel" domain="SM_CRUD" onclick="div_Search_Static00_onclick"/>
              <Combo id="cbo_UsedYn" taborder="1" left="96" top="6" width="228" height="24" index="-1" innerdataset="ds_UsedYn" datacolumn="USED_NM" codecolumn="USED_CD" cssclass="essential"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="div_MasterView" taborder="1" left="14" top="90" width="414" bottom="5">
          <Layouts>
            <Layout>
              <Static id="sta_Master10" taborder="0" text="자산분류" left="0" top="0" width="300" height="32" cssclass="sta_WF_Title"/>
              <Grid id="grd_Master10" taborder="2" left="0" top="32" binddataset="ds_Master10" autofittype="none" right="11" bottom="0" treeuseexpandkey="true" treeinitstatus="expand,all" selecttype="cell">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="399"/>
                    </Columns>
                    <Rows>
                      <Row size="24"/>
                    </Rows>
                    <Band id="body">
                      <Cell text="bind:EDCM_NM" displaytype="treeitemcontrol" edittype="tree" treestartlevel="0" treelevel="bind:EDC_LV"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
              <Button id="btn_DivMoveMv" taborder="1" width="12" cssclass="bt_WF_FoldA_R" right="0" height="35" onclick="div_MasterView_btn_DivMoveMv_onclick" text="" top="133" cursor="pointer" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="div_MasterInput" taborder="2" left="434" top="90" text="" right="14" bottom="5" enable="false">
          <Layouts>
            <Layout>
              <Tab id="tab_Master" taborder="0" tabindex="0" left="0" top="0" right="0" bottom="0" cssclass="tab_WF_MasterList" onchanged="div_MasterInput_tab_Master_onchanged">
                <Tabpages>
                  <Tabpage id="tpg_01" text="자산분류목록" enable="true">
                    <Layouts>
                      <Layout>
                        <Grid id="grd_Master10List" taborder="0" left="0" top="2" binddataset="ds_Master10" autofittype="none" right="0" selecttype="cell" height="265" autoenter="select" cellsizingtype="col" autoupdatetype="itemselect">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="30" band="left"/>
                                <Column size="35" band="left"/>
                                <Column size="35" band="left"/>
                                <Column size="100" band="left"/>
                                <Column size="200" band="left"/>
                                <Column size="200" band="left"/>
                                <Column size="100"/>
                                <Column size="70"/>
                                <Column size="90"/>
                                <Column size="120"/>
                                <Column size="60"/>
                                <Column size="200"/>
                                <Column size="80"/>
                                <Column size="150"/>
                                <Column size="80"/>
                                <Column size="150"/>
                              </Columns>
                              <Rows>
                                <Row size="26" band="head"/>
                                <Row size="24"/>
                              </Rows>
                              <Band id="head">
                                <Cell/>
                                <Cell col="1" text="No."/>
                                <Cell col="2" text="선택"/>
                                <Cell col="3" text="분류코드" cssclass="essential"/>
                                <Cell col="4" text="분류명" cssclass="essential"/>
                                <Cell col="5" text="분류명(영문)" cssclass="grdInput"/>
                                <Cell col="6" text="상위코드" cssclass="essential"/>
                                <Cell col="7" text="레벨" cssclass="essential"/>
                                <Cell col="8" text="정렬순서" cssclass="essential"/>
                                <Cell col="9" text="관리번호생성문자" cssclass="grdInput"/>
                                <Cell col="10" text="사용여부" cssclass="essential"/>
                                <Cell col="11" text="비고" cssclass="grdInput"/>
                                <Cell col="12" text="등록자"/>
                                <Cell col="13" text="등록일시"/>
                                <Cell col="14" text="수정자"/>
                                <Cell col="15" text="수정일시"/>
                              </Band>
                              <Band id="body">
                                <Cell cssclass="expr:comp.parent.gfn_Decode(crudType, &quot;I&quot;,&quot;cell_WF_Insert&quot;, &quot;U&quot;,&quot;cell_WF_Modify&quot;, &quot;D&quot;,&quot;cell_WF_Delete01&quot;, &quot;&quot;)" textAlign="center"/>
                                <Cell col="1" expr="currow+1" textAlign="center"/>
                                <Cell col="2" displaytype="checkboxcontrol" edittype="checkbox" text="bind:s_chk" textAlign="center"/>
                                <Cell col="3" text="bind:EDCM_CD" displaytype="normal" edittype="expr:crudType == 'I' ? 'text' : 'none'" editmaxlength="6" editinputtype="digit" textAlign="center"/>
                                <Cell col="4" text="bind:EDCM_NM" displaytype="normal" edittype="normal" editmaxlength="50"/>
                                <Cell col="5" text="bind:EDCE_NM" displaytype="normal" edittype="normal" editmaxlength="50" editinputtype="numberandenglish,symbol,space,sign,comma,dot"/>
                                <Cell col="6" text="bind:TEDC_CD" displaytype="normal" textAlign="center" edittype="normal" editmaxlength="6" editinputtype="digit"/>
                                <Cell col="7" text="bind:EDC_LV" displaytype="normal" textAlign="center" edittype="normal" editinputtype="digit" editmaxlength="5"/>
                                <Cell col="8" text="bind:SORT_NO" displaytype="normal" textAlign="center" edittype="normal" editinputtype="digit" editmaxlength="10"/>
                                <Cell col="9" text="bind:EDCM_CH" displaytype="normal" edittype="normal" editmaxlength="10" editinputtype="digit,english" editinputmode="upper"/>
                                <Cell col="10" text="bind:USED_YN" displaytype="checkboxcontrol" edittype="checkbox"/>
                                <Cell col="11" text="bind:REMK_NM" displaytype="normal" edittype="normal" editmaxlength="1000"/>
                                <Cell col="12" text="bind:REGI_NM" displaytype="normal" textAlign="center"/>
                                <Cell col="13" text="bind:REGI_DT" displaytype="normal" textAlign="center"/>
                                <Cell col="14" text="bind:MODI_NM" displaytype="normal" textAlign="center"/>
                                <Cell col="15" text="bind:MODI_DT" displaytype="normal" textAlign="center"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                </Tabpages>
              </Tab>
              <Tab id="tab_Detail" taborder="1" tabindex="0" left="0" top="300" right="0" bottom="0" cssclass="tab_WF_MasterList">
                <Tabpages>
                  <Tabpage id="tpg_01" text="자산분류별Spec">
                    <Layouts>
                      <Layout>
                        <Grid id="grd_Detail10" taborder="0" left="0" top="2" binddataset="ds_Detail10" autofittype="none" right="0" bottom="0" autoupdatetype="comboselect" treeinitstatus="collapse,all" autoenter="select" selecttype="cell" cellsizingtype="col">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="30" band="left"/>
                                <Column size="35" band="left"/>
                                <Column size="35" band="left"/>
                                <Column size="50" band="left"/>
                                <Column size="150" band="left"/>
                                <Column size="150" band="left"/>
                                <Column size="80" band="left"/>
                                <Column size="70" band="left"/>
                                <Column size="200"/>
                                <Column size="80"/>
                                <Column size="130"/>
                                <Column size="80"/>
                                <Column size="130"/>
                              </Columns>
                              <Rows>
                                <Row size="26" band="head"/>
                                <Row size="24"/>
                              </Rows>
                              <Band id="head">
                                <Cell/>
                                <Cell col="1" text="No."/>
                                <Cell col="2" displaytype="normal" edittype="none" text="선택"/>
                                <Cell col="3" text="순번"/>
                                <Cell col="4" text="SPEC명" cssclass="essential"/>
                                <Cell col="5" text="입력형태" cssclass="essential"/>
                                <Cell col="6" text="정렬순서" cssclass="essential"/>
                                <Cell col="7" text="사용여부" cssclass="essential"/>
                                <Cell col="8" text="비고" cssclass="grdInput"/>
                                <Cell col="9" text="등록자"/>
                                <Cell col="10" text="등록일시"/>
                                <Cell col="11" text="수정자"/>
                                <Cell col="12" text="수정일시"/>
                              </Band>
                              <Band id="body">
                                <Cell cssclass="expr:comp.parent.gfn_Decode(crudType, &quot;I&quot;,&quot;cell_WF_Insert&quot;, &quot;U&quot;,&quot;cell_WF_Modify&quot;, &quot;D&quot;,&quot;cell_WF_Delete01&quot;, &quot;&quot;)" textAlign="center"/>
                                <Cell col="1" displaytype="text" expr="currow+1" text="bind:Column0" textAlign="center"/>
                                <Cell col="2" displaytype="checkboxcontrol" edittype="checkbox" text="bind:s_chk"/>
                                <Cell col="3" text="bind:EDCD_SE" displaytype="normal" textAlign="center"/>
                                <Cell col="4" text="bind:EDSP_CD" displaytype="combotext" edittype="combo" combodataset="ds_Sm615" combodatacol="CODM_NM" combocodecol="CODM_CD" textAlign="center"/>
                                <Cell col="5" text="bind:INTY_CD" displaytype="combotext" combodataset="ds_Sm620" combodatacol="CODM_NM" combocodecol="CODM_CD" edittype="combo" textAlign="center"/>
                                <Cell col="6" text="bind:SORT_NO" displaytype="normal" edittype="text" textAlign="center" editinputtype="digit" editmaxlength="10"/>
                                <Cell col="7" text="bind:USED_YN" displaytype="checkboxcontrol" edittype="checkbox" checkboxfalsevalue="0" checkboxtruevalue="1"/>
                                <Cell col="8" text="bind:REMK_NM" displaytype="normal" edittype="text" editmaxlength="1000"/>
                                <Cell col="9" text="bind:REGI_NM" displaytype="normal" textAlign="center"/>
                                <Cell col="10" text="bind:REGI_DT" textAlign="center"/>
                                <Cell col="11" text="bind:MODI_NM" displaytype="normal" textAlign="center"/>
                                <Cell col="12" text="bind:MODI_DT" textAlign="center"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                </Tabpages>
              </Tab>
              <Div id="div_ComGrdBtnM" taborder="2" url="cmm::cmmGridButton.xfdl" async="false" width="312" bottom="tab_Master:-22" height="20" right="0" text=""/>
              <Div id="div_ComGrdBtnD" taborder="3" url="cmm::cmmGridButton.xfdl" async="false" right="0" width="312" bottom="tab_Detail:-21" height="20"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btn_DivMoveMi" taborder="3" top="78" height="10" width="40" visible="true" onclick="btn_DivMoveMi_onclick" cssclass="bt_TF_FoldA" left="700" cursor="pointer" text=""/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_Input">
        <ColumnInfo>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="EDCM_CD" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Master10" onrowposchanged="ds_Master10_onrowposchanged" canrowposchange="ds_Master10_canrowposchange" oncolumnchanged="ds_Master10_oncolumnchanged">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="EDCM_CD" type="STRING" size="256"/>
          <Column id="EDCM_NM" type="STRING" size="256"/>
          <Column id="EDCE_NM" type="STRING" size="256"/>
          <Column id="TEDC_CD" type="STRING" size="256"/>
          <Column id="EDC_LV" type="STRING" size="256"/>
          <Column id="SORT_NO" type="STRING" size="256"/>
          <Column id="EDCM_CH" type="STRING" size="256"/>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
          <Column id="REGI_NM" type="STRING" size="256"/>
          <Column id="REGI_DT" type="STRING" size="256"/>
          <Column id="MODI_NM" type="STRING" size="256"/>
          <Column id="MODI_DT" type="STRING" size="256"/>
          <Column id="s_chk" type="STRING" size="256"/>
          <Column id="crudType" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Detail10" oncolumnchanged="ds_Detail10_oncolumnchanged" useclientlayout="true">
        <ColumnInfo>
          <Column id="COMM_CD" type="STRING" size="256"/>
          <Column id="EDCM_CD" type="STRING" size="256"/>
          <Column id="EDCD_SE" type="STRING" size="256"/>
          <Column id="EDSP_CD" type="STRING" size="256"/>
          <Column id="INTY_CD" type="STRING" size="256"/>
          <Column id="INFO_NM" type="STRING" size="256"/>
          <Column id="SORT_NO" type="STRING" size="256"/>
          <Column id="USED_YN" type="STRING" size="256"/>
          <Column id="REMK_NM" type="STRING" size="256"/>
          <Column id="REGI_NM" type="STRING" size="256"/>
          <Column id="REGI_DT" type="STRING" size="256"/>
          <Column id="MODI_NM" type="STRING" size="256"/>
          <Column id="MODI_DT" type="STRING" size="256"/>
          <Column id="s_chk" type="STRING" size="256"/>
          <Column id="crudType" type="STRING" size="256"/>
          <Column id="s_conf" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Sm615">
        <ColumnInfo>
          <Column id="CODM_CD" type="STRING" size="256"/>
          <Column id="CODM_NM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Sm620">
        <ColumnInfo>
          <Column id="CODM_CD" type="STRING" size="256"/>
          <Column id="CODM_NM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_UsedYn">
        <ColumnInfo>
          <Column id="USED_CD" type="STRING" size="256"/>
          <Column id="USED_NM" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="USED_CD">1</Col>
            <Col id="USED_NM">사용</Col>
          </Row>
          <Row>
            <Col id="USED_CD">0</Col>
            <Col id="USED_NM">미사용</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  @화면ID   : M_SM_6100
*  @화면설명 : 자산Spec관리
*  @시스템명 : (SM)전산자산관리
*  @작성자   : 안병호
*  @작성일   : 2022.02.14
*  @Desction    
******************* 소스 수정 이력 ************************************************************
*  일자          		수정자                비고
*************************************************************************************************
*  2022.02.14     	    안병호 	           최초 생성 
*************************************************************************************************
*/

/***********************************************************************************************
 * 0. 폼로드
 ***********************************************************************************************/
/***********************************************************************************************
 * 00.01. Form Include 선언
 ***********************************************************************************************/
//include "comLib::CommonUtil.xjs";//공통함수

/***********************************************************************************************
 * 00.02. Form 변수 선언
 ***********************************************************************************************/
this.fvComPrgmId = "";//[필수]프로그램ID-화면로드시 메뉴정보 기준으로 재설정됨.
this.fvFormComBtnAuthYn = false;//그리드 공통버튼 권한 유무
this.fvDsRowPosChange = true;//데이터셋 Row 변경이벤트-실행유무
this.fvSchKeyYn = false;//저장후 재조회여부
this.fvSaveDupChaekYn = false;//저장시 자산분류 중복체크 여부
this.fvSchKey01 = "";//조회Key01


/***********************************************************************************************
 * 00.03. Form Onload 이벤트
 ***********************************************************************************************/
this.fn_FormOnload = function (obj:Form, e:LoadEventInfo)
{
	this.fn_FormComInit();//[공통] 화면로드시 초기 설정 함수
	this.fn_FormBizInit();//[업무] 화면로드시 초기 설정 함수 

}

/***********************************************************************************************
 * 00.04. Form [공통] 초기설정 함수 - 필수
 ***********************************************************************************************/
this.fn_FormComInit = function() 
{
	this.gfn_CommFormOnLoad(this);//[공통] 화면로드시 처리 함수(다국어등)
	this.fvComPrgmId = this.gfn_CommLoadFormPrgmId(this);//[필수]프로그램ID-메인화면기준, 팝업일경우 해당 메인화면의 프로그램ID
	this.gfn_SetGrid(this.div_MasterView.form.grd_Master10);//[공통]그리드 이벤트 설정
	this.gfn_SetGrid(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List);//[공통]그리드 이벤트 설정
	this.gfn_SetGrid(this.div_MasterInput.form.tab_Detail.tpg_01.form.grd_Detail10);//[공통]그리드 이벤트 설정
	                      
	//권한체크 할 컴포넌트 : 컴포넌트 Full Path
	var objCompCheckList = ["this.div_MasterInput.form.div_ComGrdBtn", "this.div_DetailInput.form.div_ComGrdBtn"];		
	if (this.gfn_CommCompAuthCheck(this, objCompCheckList))
	{
		this.fvFormComBtnAuthYn = true;//그리드 공통버튼 권한 유무
	}
	
	this.fn_SetGridInputButton();//[공통] 그리드 입력 버튼 설정
	
}

/***********************************************************************************************
 * 00.05. Form [업무] 초기설정 함수
 ***********************************************************************************************/
this.fn_FormBizInit = function() 
{ 
	//[공통] 공통코드 설정 : 공통코드|데이터셋명|초기항목추가여부(Y/N)|추가항목
	var objCondList = ["SM615|ds_Sm615"
	                  ,"SM620|ds_Sm620"
					  ];
					  
	//공통코드 설정함수 호출				   
	this.gfn_GetCommCode(this, objCondList, "");
	
	//[업무] 일반콤보조회
	this.fn_ComboSearch();
	
	//콤보 인덱스 설정
	this.div_Search.form.cbo_UsedYn.set_index(0);
}

/***********************************************************************************************
 * 00.06. Form [업무] 일반콤보 조회 함수
 ***********************************************************************************************/
this.fn_ComboSearch = function() 
{
	
}

/***********************************************************************************************
 * 00.07. Form OnClose 이벤트
 ***********************************************************************************************/
this.fn_FormClose = function(obj:nexacro.Form,e:nexacro.CloseEventInfo)
{
	return true;
};

/***********************************************************************************************
 * 1. 조회 영역
 ***********************************************************************************************/
/***********************************************************************************************
 * 01.01. [공통버튼] 조회 버튼 클릭 이벤트
 ***********************************************************************************************/
this.fn_ComBtnSearch = function()
{ 
	//조회전 유효성 체크
	if (!this.fn_VaildSearch()) return;	
	
	//저장후 재조회시-마스터 데이터셋 이벤트 비활성화
	if (this.fvSchKeyYn) {
		this.ds_Master10.set_enableevent(false);
	}

	//[업무] 데이터셋 설정 - 데이터셋 초기화, 조회조건 설정
	this.ds_Master10.clearData();
	this.ds_Detail10.clearData();
	this.ds_Input.clearData();
	
	//[업무] 조회조건 입력
	this.ds_Input.addRow();
	this.ds_Input.setColumn(0, "USED_YN", this.div_Search.form.cbo_UsedYn.value);	//사용여부

	//[공통]서비스정보 초기화
	this.gfn_InitComService(this);
	
	//[공통]서비스정보 추가
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	svcAddObj.sSelectSql = "sm:M_SM_6100_M_SL10";
	this.gfn_AddComSearchService(this, svcAddObj);
	
	//[공통]서비스 호출 변수
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid = "MST_SEARCH";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_PP;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = "ds_Input=ds_Input" //입력 데이터셋
	svcCallObj.sOutDatset = "ds_Master10=ds_Master10";//출력 데이터셋
	svcCallObj.sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명
	svcCallObj.sComBtnDst = "SEARCH";//공통버튼구분-조회버튼
	svcCallObj.sPrgmId = this.fvComPrgmId;//프로그램ID

	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);	
}

/***********************************************************************************************
 * 01.02. [Vaildation] 조회 필수값 체크
 ***********************************************************************************************/
this.fn_VaildSearch = function()
{	
	//[검색]NULL 체크
	var arrArgs = ["this.div_Search.form.cbo_UsedYn^" + this.div_Search.form.sta_UsedYn.text + "|NULL"
	              ]; 
	
	//컴포넌트 Vaild 체크
	if (!this.gfn_CheckFormCompValid(this, arrArgs) ) {
		return false;
	}
	
	return true;
}

/***********************************************************************************************
 * 01.03. [공통] 조회조건 클릭/변경 이벤트
 ***********************************************************************************************/
 /*---------------------------------------------------------------------------------------------
 *    01. [조회영역-Edit] 사업장 선택시 조회
  ---------------------------------------------------------------------------------------------*/
this.div_Search_cbo_SaumCd_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	this.fn_ComBtnSearch();
};

/***********************************************************************************************
 * 2. 입력
 ***********************************************************************************************/
/***********************************************************************************************
 * 02.01. [공통버튼] 입력 버튼 클릭 이벤트
 ***********************************************************************************************/ 
 
/***********************************************************************************************
 * 02.MF0.02. [Master Freeform 일반] 입력항목 클릭/변경 이벤트
 ***********************************************************************************************/
 
/***********************************************************************************************
 * 02.MF0.03. [Master 데이터셋] 변경 이벤트
 ***********************************************************************************************/
/*---------------------------------------------------------------------------------------------
 *    01. [데이터셋-ds_Master10] 데이터 Row 변경 이벤트
  ---------------------------------------------------------------------------------------------*/
this.ds_Master10_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	// Maste 그리드에서 새로운 Row가 발생하지 않으면 실행하지 않음
	if (e.newrow > -1) { //Master그리드에서 새로운 Row가 존재하는 확인	
	
		//ds_Input 바인딩값에 우측에서 클릭한 값을 넣음
		this.ds_Input.setColumn(0, "EDCM_CD", this.ds_Master10.getColumn(e.newrow, "EDCM_CD"));	
		
		//우측상단 상세결과 조회
		//[업무] 데이터셋 설정 - 데이터셋 초기화, 조회조건 설정
		this.ds_Detail10.clearData();

		//[공통]서비스정보 초기화
		this.gfn_InitComService(this);
		
		//[공통]서비스정보 추가
		var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
		svcAddObj.sSelectSql = "sm:M_SM_6100_D_SL10";
		this.gfn_AddComSearchService(this, svcAddObj);

		//[공통]서비스 호출 변수
		var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
		svcCallObj.sTrid = "DTL_SEARCH";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
		svcCallObj.sActionName = this.G_SV_SM;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
		svcCallObj.sInputDaset = "ds_Input=ds_Input" //입력 데이터셋
		svcCallObj.sOutDatset = "ds_Detail10=ds_Detail10";//출력 데이터셋
		svcCallObj.sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
		svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명

		//[공통]서비스 호출
		this.gfn_CallComService(this, svcCallObj);	

	}	
};

/*---------------------------------------------------------------------------------------------
 *    02. [데이터셋-ds_Master10] Row 변경전 이벤트
  ---------------------------------------------------------------------------------------------*/
this.ds_Master10_canrowposchange = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	if (!this.fvDsRowPosChange) return;//Row변경이벤트 수행유무
	
	if(this.ds_Master10.getCaseCount("crudType == 'I'") > 0) {		
		this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.setCellPos(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.getBindCellIndex("body","EDCM_CD"));
		this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.showEditor(true);
		this.gfn_Alert("CA004"); //행추가된 항목이 있습니다\n작업완료하시고 진행하세요				
		return false; 
	}
		
	//데이터 변경여부 체크
	if (this.gfn_DsIsUpdated(this.ds_Detail10)) {
		this.gfn_Confirm("SM003", "", "CONF.MAST_CHANGE", "fn_MsgCallback");//변경된 내역을 저장 하시겠습니까?
		return false;
	}	

	return true;
};  

/***********************************************************************************************
 * 02.MG0.01. [Master그리드-버튼] 복사 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01Copy = function()
{
};

/***********************************************************************************************
 * 02.MG0.02. [Master그리드-버튼] 행추가 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01AddRow = function()
{
		
	if(this.ds_Master10.getCaseCount("crudType == 'I'") > 0) {		
		this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.setCellPos(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.getBindCellIndex("body","EDCM_CD"));
		this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.showEditor(true);
		this.gfn_Alert("CA004"); //행추가된 항목이 있습니다\n작업완료하시고 진행하세요				
		return false; 
	}
	
	this.fvDsRowPosChange = false;//데이터셋 Row 변경이벤트-실행유무		
	
	var iOldRow = this.ds_Master10.rowposition;
	var iAddRow = this.gfn_GridInsertProcess(this, this.ds_Master10);//crud_flag 변경-입력(I)
	
	this.ds_Master10.setColumn(iAddRow, "USED_YN", "1");	//사용여부
	this.ds_Master10.setColumn(iAddRow, "COMM_CD", this.ds_Master10.getColumn(iOldRow, "COMM_CD"));	/* 회사코드 */
	
	//처음 입력 항목에 포커스
	this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.selectCell(iAddRow, 3);
	this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.setFocus();
	

	this.fvDsRowPosChange = true;//데이터셋 Row 변경이벤트-실행유무
};

/***********************************************************************************************
 * 02.MG0.03. [Master그리드-버튼] 행삽입 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01InsertRow = function()
{
	this.fvDsRowPosChange = false;//데이터셋 Row 변경이벤트-실행유무	
	
	var iOldRow = this.ds_Master10.rowposition;
	var iAddRow = this.gfn_GridInsertionProcess(this, this.ds_Master10);//crud_flag 변경-입력(I)	
	
	this.ds_Master10.setColumn(iAddRow, "USED_YN", "1");	//사용여부
	this.ds_Master10.setColumn(iAddRow, "COMM_CD", this.ds_Master10.getColumn(iOldRow, "COMM_CD"));	/* 회사코드 */
	
	//처음 입력 항목에 포커스
	this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.selectCell(iAddRow, 3);
	this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.setFocus();
		
	this.fvDsRowPosChange = true;//데이터셋 Row 변경이벤트-실행유무
};

/***********************************************************************************************
 * 02.MG0.04. [Master그리드-버튼] 행삭제 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01DeleteRow = function()
{
	this.gfn_GridDelProcess(this, this.ds_Master10);//crud_flag 변경-삭제(D)	
};

/***********************************************************************************************
 * 02.MG0.05. [Master그리드-버튼] 취소 클릭 이벤트
 ***********************************************************************************************/
this.fn_MasterGrd01Cancel = function()
{
	this.gfn_UndoColumn(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List);
};
 
/***********************************************************************************************
 * 02.MG0.06. [Master그리드] 셀 클릭 이벤트
 ***********************************************************************************************/ 

/***********************************************************************************************
 * 02.MG0.07. [Master 데이터셋] 변경 이벤트
 ***********************************************************************************************/
 /*---------------------------------------------------------------------------------------------
 *    01. [데이터셋-ds_Master] 데이터변경 이벤트
  ---------------------------------------------------------------------------------------------*/  
this.ds_Master10_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	this.gfn_GridUpdateProcess(this, obj, e);//crudType 변경-수정(U)

	//자산분류코드 중복체크
	if (e.columnid == "EDCM_CD") {	
		var sEdcmCd = "";	//자산분류코드
		var iDupCnt = 0; 	//중복개수
		
		sEdcmCd = this.ds_Master10.getColumn(e.row, "EDCM_CD");	//자산분류코드
		iDupCnt = this.ds_Master10.getCaseCount("EDCM_CD == '"+sEdcmCd+"'");		
			
		if (iDupCnt > 1) {	//자산분류코드가 중복인 경우 (자기 자신 포함하므로 2건이어야 함)
			this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.setCellPos(3,e.row);
			this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.setFocus();
			this.ds_Master10.setColumn(e.row, "EDCM_CD","");	//사업부문코드 초기화

			var arrMsgArg = ["자산분류코드"];
			this.gfn_Alert("SD008", arrMsgArg);//해당 자산분류코드가 이미 존재합니다.
			return false;			
		}
	}

};
 

/***********************************************************************************************
 * 02.DG0.01. [Detail그리드-버튼] 복사 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01Copy = function()
{
};

/***********************************************************************************************
 * 02.DG0.02. [Detail그리드-버튼] 행추가 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01AddRow = function()
{
	var iAddRow = this.gfn_GridInsertProcess(this, this.ds_Detail10);//crud_flag 변경-입력(I)
	
	//행추가시 초기값
	this.ds_Detail10.setColumn(iAddRow, "USED_YN", 1);		/* 사용여부 */
	this.ds_Detail10.setColumn(iAddRow, "COMM_CD", this.ds_Master10.getColumn(this.ds_Master10.rowposition, "COMM_CD"));	/* 회사코드 */
	this.ds_Detail10.setColumn(iAddRow, "EDCM_CD", this.ds_Master10.getColumn(this.ds_Master10.rowposition, "EDCM_CD"));	/* 자산분류코드 */

};
/***********************************************************************************************
 * 02.DG0.03. [Detail그리드-버튼] 행삽입 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01InsertRow = function()
{
};

/***********************************************************************************************
 * 02.DG0.04. [Detail그리드-버튼] 행삭제 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01DeleteRow = function()
{
	this.gfn_GridDelProcess(this, this.ds_Detail);//crud_flag 변경-삭제(D)	

};


/***********************************************************************************************
 * 02.DG0.05. [Detail그리드-버튼] 취소 클릭 이벤트
 ***********************************************************************************************/
this.fn_DetailGrd01Cancel = function(fn_DetailGrdCancel)
{
	this.gfn_UndoColumn(this.div_MasterInput.form.tab_Detail.tpg_01.form.grd_Detail10);
};  
 
/***********************************************************************************************
 * 02.DG0.06. [Detail그리드] 셀 클릭 이벤트
 ***********************************************************************************************/ 
/*---------------------------------------------------------------------------------------------
 *    01. [그리드-grd_Detail10] 셀클릭 이벤트
  ---------------------------------------------------------------------------------------------*/
this.div_MasterInput_tab_Master_tpg_01_grd_Detail10_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	//그리드 콤보 및 캘린더 클릭시 펼치기
	obj.dropdownCombo();
	obj.dropdownCalendar();
};

/***********************************************************************************************
 * 02.DG0.07. [Detail 데이터셋] 변경 이벤트
 ***********************************************************************************************/
/*---------------------------------------------------------------------------------------------
 *    01. [데이터셋-ds_Detail10] 데이터변경 이벤트
  ---------------------------------------------------------------------------------------------*/  
this.ds_Detail10_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	this.gfn_GridUpdateProcess(this, obj, e);//crudType 변경-수정(U)
};

/*---------------------------------------------------------------------------------------------
 *    01. [데이터셋-ds_Detail10] row 변경 이벤트
  ---------------------------------------------------------------------------------------------*/  
  
/***********************************************************************************************
 * 02.DG0.08. [Detail Tab] 변경 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.DG1.01. [Detail그리드2-버튼] 전체선택 클릭 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.DG1.02. [Detail그리드2-버튼] 전체해지 클릭 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.DG1.03. [Detail그리드2-버튼] 부분선택 클릭 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.DG1.04. [Detail그리드2-버튼] 부분해지 클릭 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.DG1.05. [Detail그리드2-버튼] 적용 클릭 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.DG1.06. [Detail그리드2-버튼] 취소 클릭 이벤트
 ***********************************************************************************************/
 
/***********************************************************************************************
 * 02.DG1.05. 검색조건 클릭/변경 이벤트
 ***********************************************************************************************/ 
/***********************************************************************************************
 *    01. [사용자]
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.DG1.06. [첨부 파일 그리드-버튼] 파일추가 클릭 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 02.DG1.07. [첨부 파일 그리드-버튼] 파일삭제 클릭 이벤트
 ***********************************************************************************************/

/***********************************************************************************************
 * 3. 복사
 ***********************************************************************************************/
/***********************************************************************************************
 * 03.01. [공통버튼] 복사 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnCopy = function()
{ 
}

/***********************************************************************************************
 * 4. 취소
 ***********************************************************************************************/
/***********************************************************************************************
 * 04.01. [공통버튼] 취소 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnCancel = function()
{ 
	this.ds_Master10.reset();
	this.ds_Detail10.reset();
	
}

/***********************************************************************************************
 * 5. 저장
 ***********************************************************************************************/
/***********************************************************************************************
 * 05.01. [공통버튼] 저장 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnSave = function()
{ 
	//변경여부 체크
	if (!this.gfn_DsIsUpdated(this.ds_Master10) && !this.gfn_DsIsUpdated(this.ds_Detail10)) {
		this.gfn_Alert("SM036");//변경된 내용이 없습니다.
		return;
	}
	
	//저장전 유효성 체크
	//Master 데이터 유효성 체크
	if (this.gfn_DsIsUpdated(this.ds_Master10)) {
		if (!this.fn_VaildMasterSave()) return;
	}
	
	//Detail 데이터 유효성 체크
	if (this.gfn_DsIsUpdated(this.ds_Detail10)) {
		if (!this.fn_VaildDetailSave()) return;
	}
	
	//저장시 재조회 Key설정
	this.fvSchKey01 = this.ds_Master10.getColumn(this.ds_Master10.rowposition, "EDCM_CD");//조회Key01

	//[공통]서비스 정보 초기화
	this.gfn_InitComService(this);
	
	//[공통]서비스정보 추가
	var svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object
	
	//[공통]서비스 호출 변수
	var sInputDaset = "" //입력 데이터셋
	var sOutDatset = "";//출력 데이터셋
	var sOtherArg = "";//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	
	//Master 변경건이 있으면 Master 저장
	if (this.gfn_DsIsUpdated(this.ds_Master10)) { 	
	
		//[공통]서비스 정보 추가
		svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object	
		svcAddObj.sInsertSql = "sm:M_SM_6100_M_IN10";//저장Sql
		svcAddObj.sUpdateSql = "sm:M_SM_6100_M_UP10";//수정Sql				
		svcAddObj.sDeleteSql = "";//삭제Sql
		svcAddObj.sSaveFlagColumn = "crudType";//insertSql, updateSql, deleteSql이 존재하여 신규, 수정, 삭제를 처리할 경우 기본적으로 Dataset의 getRowStates()로 판단하여 처리하며
								 //이를 Flag 컬럼으로 대체하고 싶은 경우 사용하는 [컬럼명], 해당 Flag 컬럼의 값은 신규 - I , 수정 - U , 삭제 - D의 값을 가져야 한다.
								 
		this.gfn_AddComSaveService(this, svcAddObj);
		
		sInputDaset = "ds_Master10=ds_Master10:U" //입력 데이터셋		

	}	
	
	//Detail 변경건이 있으면 Detail 저장
	if (this.gfn_DsIsUpdated(this.ds_Detail10)) { 	
	
		//[공통]서비스 정보 추가
		svcAddObj = new Object();//[공통] 서비스 추가 파라메타 정보 Object	
		svcAddObj.sInsertSql = "sm:M_SM_6100_D_IN10";//저장Sql
		svcAddObj.sUpdateSql = "sm:M_SM_6100_D_UP10";//수정Sql
		//svcAddObj.sUpdateSql = "";//수정Sql
		svcAddObj.sDeleteSql = "";//삭제Sql
		svcAddObj.sSaveFlagColumn = "crudType";//insertSql, updateSql, deleteSql이 존재하여 신규, 수정, 삭제를 처리할 경우 기본적으로 Dataset의 getRowStates()로 판단하여 처리하며
								 //이를 Flag 컬럼으로 대체하고 싶은 경우 사용하는 [컬럼명], 해당 Flag 컬럼의 값은 신규 - I , 수정 - U , 삭제 - D의 값을 가져야 한다.
								 
		this.gfn_AddComSaveService(this, svcAddObj);
		
		if (this.gfn_IsNull(sInputDaset)) {
			sInputDaset = "ds_Detail10=ds_Detail10:U" //입력 데이터셋
		} else {
			sInputDaset = sInputDaset + " ds_Detail10=ds_Detail10:U" //입력 데이터셋
		}

	}		
	
	//[공통]서비스 호출 변수
	var svcCallObj = new Object();//[공통] 서비스 파라메타 정보 Object
	svcCallObj.sTrid = "SAVE";//Transaction ID 등 callback에서 넘겨 받을 String을 지정
	svcCallObj.sActionName = this.G_SV_SM;//서버에서 호출할 Action - 모듈별로 호출되는 기본 Actio이 다름 : 공통 서비스 Action 업무구분  변수 참조
	svcCallObj.sInputDaset = sInputDaset //입력 데이터셋
	svcCallObj.sOutDatset = sOutDatset;//출력 데이터셋
	svcCallObj.sOtherArg = sOtherArg;//서버로 전송할 기타 Argument 정보 문자열, 예) key=value key2=value2
	svcCallObj.sCallBackFnc = "fn_Callback";//서버에서 처리가 완료된 후 Callback 받을 Function 명		
	
	//[공통]서비스 호출
	this.gfn_CallComService(this, svcCallObj);	

}

/***********************************************************************************************
 * 05.02. [Vaildation] Master 저장 필수값 체크 - 입력항목 
 ***********************************************************************************************/ 
this.fn_VaildMasterSave = function()
{
	//[저장] Validation 설정
	var arrArgs = ["EDCM_CD^NULL"//분류코드
	              ,"EDCM_NM^NULL"//분류명
	              ,"EDCE_NM^NULL"//분류영문명(테이블 컬럼필수임)
	              ,"TEDC_CD^NULL"//상위코드
			      ,"EDC_LV^NULL|MIN=1"//레벨
			      ,"SORT_NO^NULL|MIN=1"//정렬
				  ,"EDCM_CH^NULL"//관리번호생성문자(테이블 컬럼필수임)
				  ,"USED_YN^NULL"//사용여부
			      ]; 
				  
	var sCheckGroupTitle = this.div_MasterInput.form.tab_Master.tpg_01.text;//체크그룹 타이틀
				  
	//Grid Vaild 체크
	if (!this.gfn_CheckGridValid(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List, arrArgs, sCheckGroupTitle) ) {
		return false;
	}

	//자산분류코드 중복체크
	var sEdcmCd = "";	//자산분류코드
	var iDupCnt = 0; 	//중복개수
	for (var iLoop=0; iLoop<this.ds_Master10.getRowCount(); iLoop++) {
		sEdcmCd = this.ds_Master10.getColumn(iLoop, "EDCM_CD");	//자산분류코드
		iDupCnt = this.ds_Master10.getCaseCount("EDCM_CD == '"+sEdcmCd+"'");		
		
		if (iDupCnt > 1) {	//자산분류코드가 중복인 경우 (자기자신은 제외함)
			this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.setCellPos(3,iLoop);
			this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List.setFocus();
			this.ds_Master10.setColumn(iLoop, "EDCM_CD","");	//자산분류코드 초기화

			var arrMsgArg = ["자산분류코드"];
			this.gfn_Alert("SD008", arrMsgArg);//해당 자산분류코드가 이미 존재합니다.
			return false;
			
			break;			
		}
	}
	

	return true;
	
}

/***********************************************************************************************
 * 05.03. [Vaildation] Detail 저장 필수값 체크 - 그리드항목
 ***********************************************************************************************/ 
this.fn_VaildDetailSave = function()
{
	//[저장] Validation 설정
	var arrArgs = ["EDSP_CD^NULL"//자산Spec코드
	              ,"INTY_CD^NULL"//입력형태
			      ,"SORT_NO^NULL|MIN=1"//정렬
			      ,"USED_YN^NULL"//사용여부
			      ]; 
				  
	var sCheckGroupTitle = this.div_MasterInput.form.tab_Detail.tpg_01.text;//체크그룹 타이틀
				  
	//Grid Vaild 체크
	if (!this.gfn_CheckGridValid(this.div_MasterInput.form.tab_Detail.tpg_01.form.grd_Detail10, arrArgs, sCheckGroupTitle) ) {
		return false;
	}
	
	return true;
}
 
/***********************************************************************************************
 * 6. 삭제
 ***********************************************************************************************/
/***********************************************************************************************
 * 06.01. [공통버튼] 삭제 버튼 클릭 이벤트
 ***********************************************************************************************/  

/***********************************************************************************************
 * 06.02. [서비스] 삭제처리
 ***********************************************************************************************/  

/***********************************************************************************************
 * 06.03. [Vaildation] 삭제항목 체크
 ***********************************************************************************************/  

/***********************************************************************************************
 * 7. 엑셀
 ***********************************************************************************************/
/***********************************************************************************************
 * 07.01. [공통버튼] 엑셀저장 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnExcel = function()
{ 
	//출력 그리드 정보 설정
	var objGridList = ["this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List|" + this.div_MasterInput.form.tab_Master.tpg_01.text
	                  ,"this.div_MasterInput.form.tab_Detail.tpg_01.form.grd_Detail10|" + this.div_MasterInput.form.tab_Detail.tpg_01.text
					  ];
	 
	var sFileName = "자산Spec관리";//출력파일명
	this.gfn_ExcelExport(this, objGridList, sFileName);
}

/***********************************************************************************************
 * 8. 인쇄
 ***********************************************************************************************/
/***********************************************************************************************
 * 08.01. [공통버튼] 인쇄 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnPrint = function()
{ 
}

/***********************************************************************************************
 * 9. 결재요청
 ***********************************************************************************************/
/***********************************************************************************************
 * 09.01. [공통버튼] 결재요청 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnDecide = function()
{ 
}

/***********************************************************************************************
 * 10. 결재현황
 ***********************************************************************************************/
/***********************************************************************************************
 * 10.01. [공통버튼] 결재현황 버튼 클릭 이벤트
 ***********************************************************************************************/  
this.fn_ComBtnProcess = function()
{ 
}

/***********************************************************************************************
 * 11. 재기안
 ***********************************************************************************************/
/***********************************************************************************************
 * 11.01. [공통버튼] 재기안 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnRecide = function()
{ 
}

/***********************************************************************************************
 * 12. 닫기
 ***********************************************************************************************/
/***********************************************************************************************
 * 12.01. [공통버튼] 닫기 버튼 클릭 이벤트
 ***********************************************************************************************/ 
this.fn_ComBtnClose = function()
{ 
	return true;
}

/***********************************************************************************************
 * 13. [CallBack] 함수
 ***********************************************************************************************/
/***********************************************************************************************
 * 13.01. [서비스] CallBack 함수 처리
 ***********************************************************************************************/ 
this.fn_Callback = function(sSvcId, nErrorCode, sErrorMsg)
{
	if(nErrorCode != 0)
	{
		return;
	}	
	switch(sSvcId)
	{
		case "COMBO_SEARCH":
			
			break;
		case "MST_SEARCH": //조회
			this.ds_Master10.addColumn("s_chk", "string");
			this.ds_Master10.addColumn("crudType", "string");
			if (this.ds_Master10.getRowCount() > 0) {
			
				//저장후 재조회여부-true
				if (this.fvSchKeyYn) {
					var iFvFindRow = this.ds_Master10.findRowExpr("EDCM_CD=='" + this.fvSchKey01 + "'");//업무Key Row 찾기
				
					//마스터 데이터셋 이벤트가 비활성시 - 활성화
					if (!this.ds_Master10.enableevent) {
						this.ds_Master10.set_enableevent(true);
					}
				
					if (iFvFindRow > -1) {
						if (iFvFindRow == 0) {
							this.ds_Master10.set_rowposition(-1);
						} 
						this.ds_Master10.set_rowposition(iFvFindRow);
					} else {
						this.ds_Master10.set_rowposition(0);
					}
				}				
				
				//입력영역 활성화
				this.div_MasterInput.set_enable(true);
				this.div_MasterInput.form.tab_Detail.set_enable(true);
				
				//[공통]그리드NoData Text 초기화 설정
				this.gfn_InitGridNoDataText(this.div_MasterView.form.grd_Master10);
				this.gfn_InitGridNoDataText(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List);
				
			} else {
				
				//[공통]그리드NoData Text설정
				this.gfn_SetGridNoDataText(this.div_MasterView.form.grd_Master10);
				this.gfn_SetGridNoDataText(this.div_MasterInput.form.tab_Master.tpg_01.form.grd_Master10List);
				
				//마스터 데이터셋 이벤트가 비활성시 - 활성화
				if (!this.ds_Master10.enableevent) {
					this.ds_Master10.set_enableevent(true);
				}
			
				//입력영역 비활성화
				this.div_MasterInput.set_enable(false);
				this.div_MasterInput.form.tab_Detail.set_enable(false);
									
			}
			
			//저장후 재조회여부-true
			if (this.fvSchKeyYn) {
				this.fvSchKeyYn = false;//저장후 재조회여부
			}			
	
			break;
		case "SAVE":   //저장	
			this.fvSchKeyYn = true;
			this.fn_ComBtnSearch();	

			break;	
		case "DTL_SEARCH": //조회	
			this.ds_Detail10.addColumn("s_chk", "string");
			this.ds_Detail10.addColumn("crudType", "string");		
			
			if (this.ds_Detail10.getRowCount() > 0) {
				//[공통]그리드NoData Text 초기화 설정
				this.gfn_InitGridNoDataText(this.div_MasterInput.form.tab_Detail.tpg_01.form.grd_Detail10);
			} else {
				//[공통]그리드NoData Text설정
				this.gfn_SetGridNoDataText(this.div_MasterInput.form.tab_Detail.tpg_01.form.grd_Detail10);			
			}
 			
			break;					
	}
};

/***********************************************************************************************
 * 13.02. [팝업] CallBack 함수 처리
          strId : 팝업호출시 지정한 팝업ID
	      rtnValue : 팝업창에서 close시 지정한 반환값
          주의 : Open(popuptype=modeless)창은 팝업콜백을 지원하지 않음
 ***********************************************************************************************/ 
this.fn_PopupCallback = function(strId, rtnValue)
{
	//[Detail영역-검색]
};
 
/***********************************************************************************************
 * 13.03. [메세지] CallBack 함수 처리
 ***********************************************************************************************/  
this.fn_MsgCallback = function (strId, strVal)
{
	//MASTER 변경사항 저장여부
	if (strId == "CONF.MAST_CHANGE") {
		if(strVal )
		{
			this.fn_ComBtnSave();//저장 서비스 호출
		} else {			
			if (this.gfn_DsIsUpdated(this.ds_Detail10)) {
				this.ds_Detail10.reset();
			}				
		}
	}
}; 
 
/***********************************************************************************************
 * 14. [화면 사이즈] 조정 버튼 이벤트
 ***********************************************************************************************/
/***********************************************************************************************
 * 14.01. [조회영역-▲] 화면 사이즈조정 버튼 이벤트
 ***********************************************************************************************/ 
this.btn_DivMoveMi_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//[공통] 버튼 변수
	var btnObj = new Object();//[공통] 버튼 변수 정보 Object
	btnObj.DivSearch = "this.div_Search";//조회영역 Div
	btnObj.DivMstLeft = "this.div_MasterView";//Master영역 Left Div : Master영역이 하나인경우에는 Left에 설정
	btnObj.DivMstRight = "this.div_MasterInput";//Master영역 Right Div
	btnObj.DivDetail = "";//Detail영역 Div
	btnObj.MstLeft = 434;//Master영역 Div Left
	btnObj.MstTop = 90;//Master영역 Div Top
	btnObj.MstHeight = "";//Master영역 Div Height : Height가 없는경우 ""로 입력
	btnObj.MoveBtnDtl = "";//Detail영역 Move 버튼 : 없으면 ""로 입력
	this.gfn_MoveSeBtn(obj, btnObj);//Master영역 접고/펼치기 버튼 이벤트
};

/***********************************************************************************************
 * 14.02. [Master영역-▶] 화면 사이즈조정 버튼 이벤트
 ***********************************************************************************************/ 
this.div_MasterView_btn_DivMoveMv_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//[공통] 버튼 변수
	var btnObj = new Object();//[공통] 버튼 변수 정보 Object
	btnObj.DivMstLeft = "this.div_MasterView";//Master영역 Left Div : Master영역이 하나인경우에는 Left에 설정
	btnObj.DivMstRight = "this.div_MasterInput";//Master영역 Right Div
	btnObj.MstWidth = 414;//Master Left 영역 Div Width
	btnObj.MstHeight = "";//Master Left영역 Div Height : Height가 없는경우 ""로 입력
	btnObj.MoveBtnSch = "this.btn_DivMoveMi";//조회영역밑 Move 버튼
	btnObj.MoveBtnDtl = "";//Detail영역 Move 버튼 : 없으면 ""로 입력
	//this.gfn_MoveMlBtn(obj, btnObj);//Master Left 영역 접고/펼치기 버튼 이벤트
	this.gfn_MoveMlBtnBaseBottom(obj, btnObj);//Master Left 영역 접고/펼치기 버튼 이벤트
};

/***********************************************************************************************
 * 14.03. [Detail영역-▲] 화면 사이즈조정 버튼 이벤트
 ***********************************************************************************************/ 
this.div_MasterInput_btn_DivMoveDi_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
};

/***********************************************************************************************
 * 15. [사용자정의 함수]
 ***********************************************************************************************/

/***********************************************************************************************
 * 15.01. [공통 그리드 버튼] 입력 버튼 설정
 ***********************************************************************************************/ 
this.fn_SetGridInputButton = function()
{
	//그리드 공통 버튼 권한이 있으면
	if (this.fvFormComBtnAuthYn)
	{
		//this.gfn_SetGridInputBtnUrl(this.div_MasterInput.form.div_ComGrdBtn);//[공통] 그리드 입력 버튼 URL 설정
		//상세 그리드버튼 설정 : 버튼ID|권한(Y/N)|호출함수명
		var objBtnInfoM10List = ["COPY|N|fn_MasterGrd01Copy"
							 ,"ADD|Y|fn_MasterGrd01AddRow"
							 ,"INSERT|Y|fn_MasterGrd01InsertRow"
							 ,"DELETE|N|fn_MasterGrd01DeleteRow"
							 ,"CANCEL|Y|fn_MasterGrd01Cancel"];
		var objBtnInfoD10List = ["COPY|N|fn_DetailGrd01Copy"
							 ,"ADD|Y|fn_DetailGrd01AddRow"
							 ,"INSERT|N|fn_DetailGrd01InsertRow"
							 ,"DELETE|N|fn_DetailGrd01DeleteRow"
							 ,"CANCEL|Y|fn_DetailGrd01Cancel"];
							 
		this.div_MasterInput.form.div_ComGrdBtnM.form.fn_SetGrdButtonFunc(this, objBtnInfoM10List);	
		this.div_MasterInput.form.div_ComGrdBtnD.form.fn_SetGrdButtonFunc(this, objBtnInfoD10List);	
			
	}
}



/***********************************************************************************************
 * 15.03. [공통 첨부파일] 화면 설정
 ***********************************************************************************************/ 

/***********************************************************************************************
 * 15.04. [공통 그리드 버튼] 파일 버튼 설정
 ***********************************************************************************************/ 

]]></Script>
  </Form>
</FDL>
